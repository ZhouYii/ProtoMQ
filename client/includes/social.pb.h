// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social.proto

#ifndef PROTOBUF_social_2eproto__INCLUDED
#define PROTOBUF_social_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace netmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_social_2eproto();
void protobuf_AssignDesc_social_2eproto();
void protobuf_ShutdownFile_social_2eproto();

class AppRequest;
class AppRequest_RegisterMessage;
class AppRequest_LoginMessage;
class AppRequest_StatusUpdate;
class AppRequest_CreateRoom;
class AppRequest_RoomPostMessage;
class AppReply;
class AppReply_CreateRoomReply;

enum AppRequest_MessageType {
  AppRequest_MessageType_tStatusUpdate = 1,
  AppRequest_MessageType_tCreateRoom = 2,
  AppRequest_MessageType_tCreatePost = 3,
  AppRequest_MessageType_tRegistration = 4,
  AppRequest_MessageType_tLogin = 5,
  AppRequest_MessageType_tLogout = 6
};
bool AppRequest_MessageType_IsValid(int value);
const AppRequest_MessageType AppRequest_MessageType_MessageType_MIN = AppRequest_MessageType_tStatusUpdate;
const AppRequest_MessageType AppRequest_MessageType_MessageType_MAX = AppRequest_MessageType_tLogout;
const int AppRequest_MessageType_MessageType_ARRAYSIZE = AppRequest_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppRequest_MessageType_descriptor();
inline const ::std::string& AppRequest_MessageType_Name(AppRequest_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppRequest_MessageType_descriptor(), value);
}
inline bool AppRequest_MessageType_Parse(
    const ::std::string& name, AppRequest_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppRequest_MessageType>(
    AppRequest_MessageType_descriptor(), name, value);
}
enum AppRequest_RoomType {
  AppRequest_RoomType_Event = 1,
  AppRequest_RoomType_Profile = 2,
  AppRequest_RoomType_Page = 3
};
bool AppRequest_RoomType_IsValid(int value);
const AppRequest_RoomType AppRequest_RoomType_RoomType_MIN = AppRequest_RoomType_Event;
const AppRequest_RoomType AppRequest_RoomType_RoomType_MAX = AppRequest_RoomType_Page;
const int AppRequest_RoomType_RoomType_ARRAYSIZE = AppRequest_RoomType_RoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppRequest_RoomType_descriptor();
inline const ::std::string& AppRequest_RoomType_Name(AppRequest_RoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppRequest_RoomType_descriptor(), value);
}
inline bool AppRequest_RoomType_Parse(
    const ::std::string& name, AppRequest_RoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppRequest_RoomType>(
    AppRequest_RoomType_descriptor(), name, value);
}
// ===================================================================

class AppRequest_RegisterMessage : public ::google::protobuf::Message {
 public:
  AppRequest_RegisterMessage();
  virtual ~AppRequest_RegisterMessage();

  AppRequest_RegisterMessage(const AppRequest_RegisterMessage& from);

  inline AppRequest_RegisterMessage& operator=(const AppRequest_RegisterMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_RegisterMessage& default_instance();

  void Swap(AppRequest_RegisterMessage* other);

  // implements Message ----------------------------------------------

  AppRequest_RegisterMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_RegisterMessage& from);
  void MergeFrom(const AppRequest_RegisterMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string secured_password = 1;
  inline bool has_secured_password() const;
  inline void clear_secured_password();
  static const int kSecuredPasswordFieldNumber = 1;
  inline const ::std::string& secured_password() const;
  inline void set_secured_password(const ::std::string& value);
  inline void set_secured_password(const char* value);
  inline void set_secured_password(const char* value, size_t size);
  inline ::std::string* mutable_secured_password();
  inline ::std::string* release_secured_password();
  inline void set_allocated_secured_password(::std::string* secured_password);

  // required string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string email = 3;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 3;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.RegisterMessage)
 private:
  inline void set_has_secured_password();
  inline void clear_has_secured_password();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_email();
  inline void clear_has_email();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* secured_password_;
  ::std::string* username_;
  ::std::string* email_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_RegisterMessage* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_LoginMessage : public ::google::protobuf::Message {
 public:
  AppRequest_LoginMessage();
  virtual ~AppRequest_LoginMessage();

  AppRequest_LoginMessage(const AppRequest_LoginMessage& from);

  inline AppRequest_LoginMessage& operator=(const AppRequest_LoginMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_LoginMessage& default_instance();

  void Swap(AppRequest_LoginMessage* other);

  // implements Message ----------------------------------------------

  AppRequest_LoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_LoginMessage& from);
  void MergeFrom(const AppRequest_LoginMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 1;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // required string secured_password = 2;
  inline bool has_secured_password() const;
  inline void clear_secured_password();
  static const int kSecuredPasswordFieldNumber = 2;
  inline const ::std::string& secured_password() const;
  inline void set_secured_password(const ::std::string& value);
  inline void set_secured_password(const char* value);
  inline void set_secured_password(const char* value, size_t size);
  inline ::std::string* mutable_secured_password();
  inline ::std::string* release_secured_password();
  inline void set_allocated_secured_password(::std::string* secured_password);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.LoginMessage)
 private:
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_secured_password();
  inline void clear_has_secured_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* email_;
  ::std::string* secured_password_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_LoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_StatusUpdate : public ::google::protobuf::Message {
 public:
  AppRequest_StatusUpdate();
  virtual ~AppRequest_StatusUpdate();

  AppRequest_StatusUpdate(const AppRequest_StatusUpdate& from);

  inline AppRequest_StatusUpdate& operator=(const AppRequest_StatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_StatusUpdate& default_instance();

  void Swap(AppRequest_StatusUpdate* other);

  // implements Message ----------------------------------------------

  AppRequest_StatusUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_StatusUpdate& from);
  void MergeFrom(const AppRequest_StatusUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string body = 1;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 1;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const char* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // repeated bytes photos = 2;
  inline int photos_size() const;
  inline void clear_photos();
  static const int kPhotosFieldNumber = 2;
  inline const ::std::string& photos(int index) const;
  inline ::std::string* mutable_photos(int index);
  inline void set_photos(int index, const ::std::string& value);
  inline void set_photos(int index, const char* value);
  inline void set_photos(int index, const void* value, size_t size);
  inline ::std::string* add_photos();
  inline void add_photos(const ::std::string& value);
  inline void add_photos(const char* value);
  inline void add_photos(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& photos() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_photos();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.StatusUpdate)
 private:
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* body_;
  ::google::protobuf::RepeatedPtrField< ::std::string> photos_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_StatusUpdate* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_CreateRoom : public ::google::protobuf::Message {
 public:
  AppRequest_CreateRoom();
  virtual ~AppRequest_CreateRoom();

  AppRequest_CreateRoom(const AppRequest_CreateRoom& from);

  inline AppRequest_CreateRoom& operator=(const AppRequest_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_CreateRoom& default_instance();

  void Swap(AppRequest_CreateRoom* other);

  // implements Message ----------------------------------------------

  AppRequest_CreateRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_CreateRoom& from);
  void MergeFrom(const AppRequest_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .netmsg.AppRequest.RoomType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::netmsg::AppRequest_RoomType type() const;
  inline void set_type(::netmsg::AppRequest_RoomType value);

  // optional bytes uuid_suggestion = 3;
  inline bool has_uuid_suggestion() const;
  inline void clear_uuid_suggestion();
  static const int kUuidSuggestionFieldNumber = 3;
  inline const ::std::string& uuid_suggestion() const;
  inline void set_uuid_suggestion(const ::std::string& value);
  inline void set_uuid_suggestion(const char* value);
  inline void set_uuid_suggestion(const void* value, size_t size);
  inline ::std::string* mutable_uuid_suggestion();
  inline ::std::string* release_uuid_suggestion();
  inline void set_allocated_uuid_suggestion(::std::string* uuid_suggestion);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.CreateRoom)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_uuid_suggestion();
  inline void clear_has_uuid_suggestion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* uuid_suggestion_;
  int type_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_RoomPostMessage : public ::google::protobuf::Message {
 public:
  AppRequest_RoomPostMessage();
  virtual ~AppRequest_RoomPostMessage();

  AppRequest_RoomPostMessage(const AppRequest_RoomPostMessage& from);

  inline AppRequest_RoomPostMessage& operator=(const AppRequest_RoomPostMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_RoomPostMessage& default_instance();

  void Swap(AppRequest_RoomPostMessage* other);

  // implements Message ----------------------------------------------

  AppRequest_RoomPostMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_RoomPostMessage& from);
  void MergeFrom(const AppRequest_RoomPostMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes room_uuid = 1;
  inline bool has_room_uuid() const;
  inline void clear_room_uuid();
  static const int kRoomUuidFieldNumber = 1;
  inline const ::std::string& room_uuid() const;
  inline void set_room_uuid(const ::std::string& value);
  inline void set_room_uuid(const char* value);
  inline void set_room_uuid(const void* value, size_t size);
  inline ::std::string* mutable_room_uuid();
  inline ::std::string* release_room_uuid();
  inline void set_allocated_room_uuid(::std::string* room_uuid);

  // required string body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const char* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // repeated bytes photos = 3;
  inline int photos_size() const;
  inline void clear_photos();
  static const int kPhotosFieldNumber = 3;
  inline const ::std::string& photos(int index) const;
  inline ::std::string* mutable_photos(int index);
  inline void set_photos(int index, const ::std::string& value);
  inline void set_photos(int index, const char* value);
  inline void set_photos(int index, const void* value, size_t size);
  inline ::std::string* add_photos();
  inline void add_photos(const ::std::string& value);
  inline void add_photos(const char* value);
  inline void add_photos(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& photos() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_photos();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.RoomPostMessage)
 private:
  inline void set_has_room_uuid();
  inline void clear_has_room_uuid();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* room_uuid_;
  ::std::string* body_;
  ::google::protobuf::RepeatedPtrField< ::std::string> photos_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_RoomPostMessage* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest : public ::google::protobuf::Message {
 public:
  AppRequest();
  virtual ~AppRequest();

  AppRequest(const AppRequest& from);

  inline AppRequest& operator=(const AppRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest& default_instance();

  void Swap(AppRequest* other);

  // implements Message ----------------------------------------------

  AppRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest& from);
  void MergeFrom(const AppRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppRequest_RegisterMessage RegisterMessage;
  typedef AppRequest_LoginMessage LoginMessage;
  typedef AppRequest_StatusUpdate StatusUpdate;
  typedef AppRequest_CreateRoom CreateRoom;
  typedef AppRequest_RoomPostMessage RoomPostMessage;

  typedef AppRequest_MessageType MessageType;
  static const MessageType tStatusUpdate = AppRequest_MessageType_tStatusUpdate;
  static const MessageType tCreateRoom = AppRequest_MessageType_tCreateRoom;
  static const MessageType tCreatePost = AppRequest_MessageType_tCreatePost;
  static const MessageType tRegistration = AppRequest_MessageType_tRegistration;
  static const MessageType tLogin = AppRequest_MessageType_tLogin;
  static const MessageType tLogout = AppRequest_MessageType_tLogout;
  static inline bool MessageType_IsValid(int value) {
    return AppRequest_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    AppRequest_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    AppRequest_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    AppRequest_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return AppRequest_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return AppRequest_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return AppRequest_MessageType_Parse(name, value);
  }

  typedef AppRequest_RoomType RoomType;
  static const RoomType Event = AppRequest_RoomType_Event;
  static const RoomType Profile = AppRequest_RoomType_Profile;
  static const RoomType Page = AppRequest_RoomType_Page;
  static inline bool RoomType_IsValid(int value) {
    return AppRequest_RoomType_IsValid(value);
  }
  static const RoomType RoomType_MIN =
    AppRequest_RoomType_RoomType_MIN;
  static const RoomType RoomType_MAX =
    AppRequest_RoomType_RoomType_MAX;
  static const int RoomType_ARRAYSIZE =
    AppRequest_RoomType_RoomType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoomType_descriptor() {
    return AppRequest_RoomType_descriptor();
  }
  static inline const ::std::string& RoomType_Name(RoomType value) {
    return AppRequest_RoomType_Name(value);
  }
  static inline bool RoomType_Parse(const ::std::string& name,
      RoomType* value) {
    return AppRequest_RoomType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 phone_id = 1;
  inline bool has_phone_id() const;
  inline void clear_phone_id();
  static const int kPhoneIdFieldNumber = 1;
  inline ::google::protobuf::int64 phone_id() const;
  inline void set_phone_id(::google::protobuf::int64 value);

  // required .netmsg.AppRequest.MessageType msg_type = 2;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::netmsg::AppRequest_MessageType msg_type() const;
  inline void set_msg_type(::netmsg::AppRequest_MessageType value);

  // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
  inline bool has_reg_msg() const;
  inline void clear_reg_msg();
  static const int kRegMsgFieldNumber = 3;
  inline const ::netmsg::AppRequest_RegisterMessage& reg_msg() const;
  inline ::netmsg::AppRequest_RegisterMessage* mutable_reg_msg();
  inline ::netmsg::AppRequest_RegisterMessage* release_reg_msg();
  inline void set_allocated_reg_msg(::netmsg::AppRequest_RegisterMessage* reg_msg);

  // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
  inline bool has_login_msg() const;
  inline void clear_login_msg();
  static const int kLoginMsgFieldNumber = 4;
  inline const ::netmsg::AppRequest_LoginMessage& login_msg() const;
  inline ::netmsg::AppRequest_LoginMessage* mutable_login_msg();
  inline ::netmsg::AppRequest_LoginMessage* release_login_msg();
  inline void set_allocated_login_msg(::netmsg::AppRequest_LoginMessage* login_msg);

  // optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
  inline bool has_status_updates() const;
  inline void clear_status_updates();
  static const int kStatusUpdatesFieldNumber = 5;
  inline const ::netmsg::AppRequest_StatusUpdate& status_updates() const;
  inline ::netmsg::AppRequest_StatusUpdate* mutable_status_updates();
  inline ::netmsg::AppRequest_StatusUpdate* release_status_updates();
  inline void set_allocated_status_updates(::netmsg::AppRequest_StatusUpdate* status_updates);

  // optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
  inline bool has_create_room_msg() const;
  inline void clear_create_room_msg();
  static const int kCreateRoomMsgFieldNumber = 13;
  inline const ::netmsg::AppRequest_CreateRoom& create_room_msg() const;
  inline ::netmsg::AppRequest_CreateRoom* mutable_create_room_msg();
  inline ::netmsg::AppRequest_CreateRoom* release_create_room_msg();
  inline void set_allocated_create_room_msg(::netmsg::AppRequest_CreateRoom* create_room_msg);

  // optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
  inline bool has_room_post_msg() const;
  inline void clear_room_post_msg();
  static const int kRoomPostMsgFieldNumber = 14;
  inline const ::netmsg::AppRequest_RoomPostMessage& room_post_msg() const;
  inline ::netmsg::AppRequest_RoomPostMessage* mutable_room_post_msg();
  inline ::netmsg::AppRequest_RoomPostMessage* release_room_post_msg();
  inline void set_allocated_room_post_msg(::netmsg::AppRequest_RoomPostMessage* room_post_msg);

  // optional bool logout_request = 15;
  inline bool has_logout_request() const;
  inline void clear_logout_request();
  static const int kLogoutRequestFieldNumber = 15;
  inline bool logout_request() const;
  inline void set_logout_request(bool value);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest)
 private:
  inline void set_has_phone_id();
  inline void clear_has_phone_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_reg_msg();
  inline void clear_has_reg_msg();
  inline void set_has_login_msg();
  inline void clear_has_login_msg();
  inline void set_has_status_updates();
  inline void clear_has_status_updates();
  inline void set_has_create_room_msg();
  inline void clear_has_create_room_msg();
  inline void set_has_room_post_msg();
  inline void clear_has_room_post_msg();
  inline void set_has_logout_request();
  inline void clear_has_logout_request();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 phone_id_;
  ::netmsg::AppRequest_RegisterMessage* reg_msg_;
  ::netmsg::AppRequest_LoginMessage* login_msg_;
  ::netmsg::AppRequest_StatusUpdate* status_updates_;
  int msg_type_;
  bool logout_request_;
  ::netmsg::AppRequest_CreateRoom* create_room_msg_;
  ::netmsg::AppRequest_RoomPostMessage* room_post_msg_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest* default_instance_;
};
// -------------------------------------------------------------------

class AppReply_CreateRoomReply : public ::google::protobuf::Message {
 public:
  AppReply_CreateRoomReply();
  virtual ~AppReply_CreateRoomReply();

  AppReply_CreateRoomReply(const AppReply_CreateRoomReply& from);

  inline AppReply_CreateRoomReply& operator=(const AppReply_CreateRoomReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply_CreateRoomReply& default_instance();

  void Swap(AppReply_CreateRoomReply* other);

  // implements Message ----------------------------------------------

  AppReply_CreateRoomReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply_CreateRoomReply& from);
  void MergeFrom(const AppReply_CreateRoomReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes success_uuid = 1;
  inline bool has_success_uuid() const;
  inline void clear_success_uuid();
  static const int kSuccessUuidFieldNumber = 1;
  inline const ::std::string& success_uuid() const;
  inline void set_success_uuid(const ::std::string& value);
  inline void set_success_uuid(const char* value);
  inline void set_success_uuid(const void* value, size_t size);
  inline ::std::string* mutable_success_uuid();
  inline ::std::string* release_success_uuid();
  inline void set_allocated_success_uuid(::std::string* success_uuid);

  // @@protoc_insertion_point(class_scope:netmsg.AppReply.CreateRoomReply)
 private:
  inline void set_has_success_uuid();
  inline void clear_has_success_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* success_uuid_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply_CreateRoomReply* default_instance_;
};
// -------------------------------------------------------------------

class AppReply : public ::google::protobuf::Message {
 public:
  AppReply();
  virtual ~AppReply();

  AppReply(const AppReply& from);

  inline AppReply& operator=(const AppReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply& default_instance();

  void Swap(AppReply* other);

  // implements Message ----------------------------------------------

  AppReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply& from);
  void MergeFrom(const AppReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppReply_CreateRoomReply CreateRoomReply;

  // accessors -------------------------------------------------------

  // required bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
  inline bool has_create_reply() const;
  inline void clear_create_reply();
  static const int kCreateReplyFieldNumber = 2;
  inline const ::netmsg::AppReply_CreateRoomReply& create_reply() const;
  inline ::netmsg::AppReply_CreateRoomReply* mutable_create_reply();
  inline ::netmsg::AppReply_CreateRoomReply* release_create_reply();
  inline void set_allocated_create_reply(::netmsg::AppReply_CreateRoomReply* create_reply);

  // @@protoc_insertion_point(class_scope:netmsg.AppReply)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_create_reply();
  inline void clear_has_create_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::netmsg::AppReply_CreateRoomReply* create_reply_;
  bool success_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply* default_instance_;
};
// ===================================================================


// ===================================================================

// AppRequest_RegisterMessage

// required string secured_password = 1;
inline bool AppRequest_RegisterMessage::has_secured_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_secured_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_RegisterMessage::clear_has_secured_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_RegisterMessage::clear_secured_password() {
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_->clear();
  }
  clear_has_secured_password();
}
inline const ::std::string& AppRequest_RegisterMessage::secured_password() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.secured_password)
  return *secured_password_;
}
inline void AppRequest_RegisterMessage::set_secured_password(const ::std::string& value) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.secured_password)
}
inline void AppRequest_RegisterMessage::set_secured_password(const char* value) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RegisterMessage.secured_password)
}
inline void AppRequest_RegisterMessage::set_secured_password(const char* value, size_t size) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RegisterMessage.secured_password)
}
inline ::std::string* AppRequest_RegisterMessage::mutable_secured_password() {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RegisterMessage.secured_password)
  return secured_password_;
}
inline ::std::string* AppRequest_RegisterMessage::release_secured_password() {
  clear_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = secured_password_;
    secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RegisterMessage::set_allocated_secured_password(::std::string* secured_password) {
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secured_password_;
  }
  if (secured_password) {
    set_has_secured_password();
    secured_password_ = secured_password;
  } else {
    clear_has_secured_password();
    secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RegisterMessage.secured_password)
}

// required string username = 2;
inline bool AppRequest_RegisterMessage::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_RegisterMessage::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_RegisterMessage::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& AppRequest_RegisterMessage::username() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.username)
  return *username_;
}
inline void AppRequest_RegisterMessage::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.username)
}
inline void AppRequest_RegisterMessage::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RegisterMessage.username)
}
inline void AppRequest_RegisterMessage::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RegisterMessage.username)
}
inline ::std::string* AppRequest_RegisterMessage::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RegisterMessage.username)
  return username_;
}
inline ::std::string* AppRequest_RegisterMessage::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RegisterMessage::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RegisterMessage.username)
}

// optional string email = 3;
inline bool AppRequest_RegisterMessage::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest_RegisterMessage::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest_RegisterMessage::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& AppRequest_RegisterMessage::email() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.email)
  return *email_;
}
inline void AppRequest_RegisterMessage::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.email)
}
inline void AppRequest_RegisterMessage::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RegisterMessage.email)
}
inline void AppRequest_RegisterMessage::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RegisterMessage.email)
}
inline ::std::string* AppRequest_RegisterMessage::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RegisterMessage.email)
  return email_;
}
inline ::std::string* AppRequest_RegisterMessage::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RegisterMessage::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RegisterMessage.email)
}

// -------------------------------------------------------------------

// AppRequest_LoginMessage

// optional string email = 1;
inline bool AppRequest_LoginMessage::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_LoginMessage::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_LoginMessage::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_LoginMessage::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& AppRequest_LoginMessage::email() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.LoginMessage.email)
  return *email_;
}
inline void AppRequest_LoginMessage::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.LoginMessage.email)
}
inline void AppRequest_LoginMessage::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.LoginMessage.email)
}
inline void AppRequest_LoginMessage::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.LoginMessage.email)
}
inline ::std::string* AppRequest_LoginMessage::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.LoginMessage.email)
  return email_;
}
inline ::std::string* AppRequest_LoginMessage::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_LoginMessage::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.LoginMessage.email)
}

// required string secured_password = 2;
inline bool AppRequest_LoginMessage::has_secured_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_LoginMessage::set_has_secured_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_LoginMessage::clear_has_secured_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_LoginMessage::clear_secured_password() {
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_->clear();
  }
  clear_has_secured_password();
}
inline const ::std::string& AppRequest_LoginMessage::secured_password() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.LoginMessage.secured_password)
  return *secured_password_;
}
inline void AppRequest_LoginMessage::set_secured_password(const ::std::string& value) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.LoginMessage.secured_password)
}
inline void AppRequest_LoginMessage::set_secured_password(const char* value) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.LoginMessage.secured_password)
}
inline void AppRequest_LoginMessage::set_secured_password(const char* value, size_t size) {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  secured_password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.LoginMessage.secured_password)
}
inline ::std::string* AppRequest_LoginMessage::mutable_secured_password() {
  set_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secured_password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.LoginMessage.secured_password)
  return secured_password_;
}
inline ::std::string* AppRequest_LoginMessage::release_secured_password() {
  clear_has_secured_password();
  if (secured_password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = secured_password_;
    secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_LoginMessage::set_allocated_secured_password(::std::string* secured_password) {
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secured_password_;
  }
  if (secured_password) {
    set_has_secured_password();
    secured_password_ = secured_password;
  } else {
    clear_has_secured_password();
    secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.LoginMessage.secured_password)
}

// -------------------------------------------------------------------

// AppRequest_StatusUpdate

// required string body = 1;
inline bool AppRequest_StatusUpdate::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_StatusUpdate::set_has_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_StatusUpdate::clear_has_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_StatusUpdate::clear_body() {
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& AppRequest_StatusUpdate::body() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.StatusUpdate.body)
  return *body_;
}
inline void AppRequest_StatusUpdate::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.StatusUpdate.body)
}
inline void AppRequest_StatusUpdate::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.StatusUpdate.body)
}
inline void AppRequest_StatusUpdate::set_body(const char* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.StatusUpdate.body)
}
inline ::std::string* AppRequest_StatusUpdate::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.StatusUpdate.body)
  return body_;
}
inline ::std::string* AppRequest_StatusUpdate::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_StatusUpdate::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.StatusUpdate.body)
}

// repeated bytes photos = 2;
inline int AppRequest_StatusUpdate::photos_size() const {
  return photos_.size();
}
inline void AppRequest_StatusUpdate::clear_photos() {
  photos_.Clear();
}
inline const ::std::string& AppRequest_StatusUpdate::photos(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.StatusUpdate.photos)
  return photos_.Get(index);
}
inline ::std::string* AppRequest_StatusUpdate::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.StatusUpdate.photos)
  return photos_.Mutable(index);
}
inline void AppRequest_StatusUpdate::set_photos(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.StatusUpdate.photos)
  photos_.Mutable(index)->assign(value);
}
inline void AppRequest_StatusUpdate::set_photos(int index, const char* value) {
  photos_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.StatusUpdate.photos)
}
inline void AppRequest_StatusUpdate::set_photos(int index, const void* value, size_t size) {
  photos_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.StatusUpdate.photos)
}
inline ::std::string* AppRequest_StatusUpdate::add_photos() {
  return photos_.Add();
}
inline void AppRequest_StatusUpdate::add_photos(const ::std::string& value) {
  photos_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.StatusUpdate.photos)
}
inline void AppRequest_StatusUpdate::add_photos(const char* value) {
  photos_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:netmsg.AppRequest.StatusUpdate.photos)
}
inline void AppRequest_StatusUpdate::add_photos(const void* value, size_t size) {
  photos_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:netmsg.AppRequest.StatusUpdate.photos)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppRequest_StatusUpdate::photos() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.StatusUpdate.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AppRequest_StatusUpdate::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.StatusUpdate.photos)
  return &photos_;
}

// -------------------------------------------------------------------

// AppRequest_CreateRoom

// required string name = 1;
inline bool AppRequest_CreateRoom::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_CreateRoom::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_CreateRoom::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_CreateRoom::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AppRequest_CreateRoom::name() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateRoom.name)
  return *name_;
}
inline void AppRequest_CreateRoom::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateRoom.name)
}
inline void AppRequest_CreateRoom::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateRoom.name)
}
inline void AppRequest_CreateRoom::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateRoom.name)
}
inline ::std::string* AppRequest_CreateRoom::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateRoom.name)
  return name_;
}
inline ::std::string* AppRequest_CreateRoom::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateRoom::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateRoom.name)
}

// required .netmsg.AppRequest.RoomType type = 2;
inline bool AppRequest_CreateRoom::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_CreateRoom::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_CreateRoom::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_CreateRoom::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::netmsg::AppRequest_RoomType AppRequest_CreateRoom::type() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateRoom.type)
  return static_cast< ::netmsg::AppRequest_RoomType >(type_);
}
inline void AppRequest_CreateRoom::set_type(::netmsg::AppRequest_RoomType value) {
  assert(::netmsg::AppRequest_RoomType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateRoom.type)
}

// optional bytes uuid_suggestion = 3;
inline bool AppRequest_CreateRoom::has_uuid_suggestion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest_CreateRoom::set_has_uuid_suggestion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest_CreateRoom::clear_has_uuid_suggestion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest_CreateRoom::clear_uuid_suggestion() {
  if (uuid_suggestion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_suggestion_->clear();
  }
  clear_has_uuid_suggestion();
}
inline const ::std::string& AppRequest_CreateRoom::uuid_suggestion() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateRoom.uuid_suggestion)
  return *uuid_suggestion_;
}
inline void AppRequest_CreateRoom::set_uuid_suggestion(const ::std::string& value) {
  set_has_uuid_suggestion();
  if (uuid_suggestion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_suggestion_ = new ::std::string;
  }
  uuid_suggestion_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateRoom.uuid_suggestion)
}
inline void AppRequest_CreateRoom::set_uuid_suggestion(const char* value) {
  set_has_uuid_suggestion();
  if (uuid_suggestion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_suggestion_ = new ::std::string;
  }
  uuid_suggestion_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateRoom.uuid_suggestion)
}
inline void AppRequest_CreateRoom::set_uuid_suggestion(const void* value, size_t size) {
  set_has_uuid_suggestion();
  if (uuid_suggestion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_suggestion_ = new ::std::string;
  }
  uuid_suggestion_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateRoom.uuid_suggestion)
}
inline ::std::string* AppRequest_CreateRoom::mutable_uuid_suggestion() {
  set_has_uuid_suggestion();
  if (uuid_suggestion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_suggestion_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateRoom.uuid_suggestion)
  return uuid_suggestion_;
}
inline ::std::string* AppRequest_CreateRoom::release_uuid_suggestion() {
  clear_has_uuid_suggestion();
  if (uuid_suggestion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uuid_suggestion_;
    uuid_suggestion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateRoom::set_allocated_uuid_suggestion(::std::string* uuid_suggestion) {
  if (uuid_suggestion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uuid_suggestion_;
  }
  if (uuid_suggestion) {
    set_has_uuid_suggestion();
    uuid_suggestion_ = uuid_suggestion;
  } else {
    clear_has_uuid_suggestion();
    uuid_suggestion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateRoom.uuid_suggestion)
}

// -------------------------------------------------------------------

// AppRequest_RoomPostMessage

// required bytes room_uuid = 1;
inline bool AppRequest_RoomPostMessage::has_room_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_RoomPostMessage::set_has_room_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_RoomPostMessage::clear_has_room_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_RoomPostMessage::clear_room_uuid() {
  if (room_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_uuid_->clear();
  }
  clear_has_room_uuid();
}
inline const ::std::string& AppRequest_RoomPostMessage::room_uuid() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RoomPostMessage.room_uuid)
  return *room_uuid_;
}
inline void AppRequest_RoomPostMessage::set_room_uuid(const ::std::string& value) {
  set_has_room_uuid();
  if (room_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_uuid_ = new ::std::string;
  }
  room_uuid_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RoomPostMessage.room_uuid)
}
inline void AppRequest_RoomPostMessage::set_room_uuid(const char* value) {
  set_has_room_uuid();
  if (room_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_uuid_ = new ::std::string;
  }
  room_uuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RoomPostMessage.room_uuid)
}
inline void AppRequest_RoomPostMessage::set_room_uuid(const void* value, size_t size) {
  set_has_room_uuid();
  if (room_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_uuid_ = new ::std::string;
  }
  room_uuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RoomPostMessage.room_uuid)
}
inline ::std::string* AppRequest_RoomPostMessage::mutable_room_uuid() {
  set_has_room_uuid();
  if (room_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_uuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RoomPostMessage.room_uuid)
  return room_uuid_;
}
inline ::std::string* AppRequest_RoomPostMessage::release_room_uuid() {
  clear_has_room_uuid();
  if (room_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = room_uuid_;
    room_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RoomPostMessage::set_allocated_room_uuid(::std::string* room_uuid) {
  if (room_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_uuid_;
  }
  if (room_uuid) {
    set_has_room_uuid();
    room_uuid_ = room_uuid;
  } else {
    clear_has_room_uuid();
    room_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RoomPostMessage.room_uuid)
}

// required string body = 2;
inline bool AppRequest_RoomPostMessage::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_RoomPostMessage::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_RoomPostMessage::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_RoomPostMessage::clear_body() {
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& AppRequest_RoomPostMessage::body() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RoomPostMessage.body)
  return *body_;
}
inline void AppRequest_RoomPostMessage::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RoomPostMessage.body)
}
inline void AppRequest_RoomPostMessage::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RoomPostMessage.body)
}
inline void AppRequest_RoomPostMessage::set_body(const char* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RoomPostMessage.body)
}
inline ::std::string* AppRequest_RoomPostMessage::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    body_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RoomPostMessage.body)
  return body_;
}
inline ::std::string* AppRequest_RoomPostMessage::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RoomPostMessage::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RoomPostMessage.body)
}

// repeated bytes photos = 3;
inline int AppRequest_RoomPostMessage::photos_size() const {
  return photos_.size();
}
inline void AppRequest_RoomPostMessage::clear_photos() {
  photos_.Clear();
}
inline const ::std::string& AppRequest_RoomPostMessage::photos(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RoomPostMessage.photos)
  return photos_.Get(index);
}
inline ::std::string* AppRequest_RoomPostMessage::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RoomPostMessage.photos)
  return photos_.Mutable(index);
}
inline void AppRequest_RoomPostMessage::set_photos(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RoomPostMessage.photos)
  photos_.Mutable(index)->assign(value);
}
inline void AppRequest_RoomPostMessage::set_photos(int index, const char* value) {
  photos_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RoomPostMessage.photos)
}
inline void AppRequest_RoomPostMessage::set_photos(int index, const void* value, size_t size) {
  photos_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RoomPostMessage.photos)
}
inline ::std::string* AppRequest_RoomPostMessage::add_photos() {
  return photos_.Add();
}
inline void AppRequest_RoomPostMessage::add_photos(const ::std::string& value) {
  photos_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.RoomPostMessage.photos)
}
inline void AppRequest_RoomPostMessage::add_photos(const char* value) {
  photos_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:netmsg.AppRequest.RoomPostMessage.photos)
}
inline void AppRequest_RoomPostMessage::add_photos(const void* value, size_t size) {
  photos_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:netmsg.AppRequest.RoomPostMessage.photos)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppRequest_RoomPostMessage::photos() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.RoomPostMessage.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AppRequest_RoomPostMessage::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.RoomPostMessage.photos)
  return &photos_;
}

// -------------------------------------------------------------------

// AppRequest

// required int64 phone_id = 1;
inline bool AppRequest::has_phone_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest::set_has_phone_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest::clear_has_phone_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest::clear_phone_id() {
  phone_id_ = GOOGLE_LONGLONG(0);
  clear_has_phone_id();
}
inline ::google::protobuf::int64 AppRequest::phone_id() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.phone_id)
  return phone_id_;
}
inline void AppRequest::set_phone_id(::google::protobuf::int64 value) {
  set_has_phone_id();
  phone_id_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.phone_id)
}

// required .netmsg.AppRequest.MessageType msg_type = 2;
inline bool AppRequest::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest::clear_msg_type() {
  msg_type_ = 1;
  clear_has_msg_type();
}
inline ::netmsg::AppRequest_MessageType AppRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.msg_type)
  return static_cast< ::netmsg::AppRequest_MessageType >(msg_type_);
}
inline void AppRequest::set_msg_type(::netmsg::AppRequest_MessageType value) {
  assert(::netmsg::AppRequest_MessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.msg_type)
}

// optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
inline bool AppRequest::has_reg_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest::set_has_reg_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest::clear_has_reg_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest::clear_reg_msg() {
  if (reg_msg_ != NULL) reg_msg_->::netmsg::AppRequest_RegisterMessage::Clear();
  clear_has_reg_msg();
}
inline const ::netmsg::AppRequest_RegisterMessage& AppRequest::reg_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.reg_msg)
  return reg_msg_ != NULL ? *reg_msg_ : *default_instance_->reg_msg_;
}
inline ::netmsg::AppRequest_RegisterMessage* AppRequest::mutable_reg_msg() {
  set_has_reg_msg();
  if (reg_msg_ == NULL) reg_msg_ = new ::netmsg::AppRequest_RegisterMessage;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.reg_msg)
  return reg_msg_;
}
inline ::netmsg::AppRequest_RegisterMessage* AppRequest::release_reg_msg() {
  clear_has_reg_msg();
  ::netmsg::AppRequest_RegisterMessage* temp = reg_msg_;
  reg_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_reg_msg(::netmsg::AppRequest_RegisterMessage* reg_msg) {
  delete reg_msg_;
  reg_msg_ = reg_msg;
  if (reg_msg) {
    set_has_reg_msg();
  } else {
    clear_has_reg_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.reg_msg)
}

// optional .netmsg.AppRequest.LoginMessage login_msg = 4;
inline bool AppRequest::has_login_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppRequest::set_has_login_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppRequest::clear_has_login_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppRequest::clear_login_msg() {
  if (login_msg_ != NULL) login_msg_->::netmsg::AppRequest_LoginMessage::Clear();
  clear_has_login_msg();
}
inline const ::netmsg::AppRequest_LoginMessage& AppRequest::login_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.login_msg)
  return login_msg_ != NULL ? *login_msg_ : *default_instance_->login_msg_;
}
inline ::netmsg::AppRequest_LoginMessage* AppRequest::mutable_login_msg() {
  set_has_login_msg();
  if (login_msg_ == NULL) login_msg_ = new ::netmsg::AppRequest_LoginMessage;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.login_msg)
  return login_msg_;
}
inline ::netmsg::AppRequest_LoginMessage* AppRequest::release_login_msg() {
  clear_has_login_msg();
  ::netmsg::AppRequest_LoginMessage* temp = login_msg_;
  login_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_login_msg(::netmsg::AppRequest_LoginMessage* login_msg) {
  delete login_msg_;
  login_msg_ = login_msg;
  if (login_msg) {
    set_has_login_msg();
  } else {
    clear_has_login_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.login_msg)
}

// optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
inline bool AppRequest::has_status_updates() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppRequest::set_has_status_updates() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppRequest::clear_has_status_updates() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppRequest::clear_status_updates() {
  if (status_updates_ != NULL) status_updates_->::netmsg::AppRequest_StatusUpdate::Clear();
  clear_has_status_updates();
}
inline const ::netmsg::AppRequest_StatusUpdate& AppRequest::status_updates() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.status_updates)
  return status_updates_ != NULL ? *status_updates_ : *default_instance_->status_updates_;
}
inline ::netmsg::AppRequest_StatusUpdate* AppRequest::mutable_status_updates() {
  set_has_status_updates();
  if (status_updates_ == NULL) status_updates_ = new ::netmsg::AppRequest_StatusUpdate;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.status_updates)
  return status_updates_;
}
inline ::netmsg::AppRequest_StatusUpdate* AppRequest::release_status_updates() {
  clear_has_status_updates();
  ::netmsg::AppRequest_StatusUpdate* temp = status_updates_;
  status_updates_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_status_updates(::netmsg::AppRequest_StatusUpdate* status_updates) {
  delete status_updates_;
  status_updates_ = status_updates;
  if (status_updates) {
    set_has_status_updates();
  } else {
    clear_has_status_updates();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.status_updates)
}

// optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
inline bool AppRequest::has_create_room_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppRequest::set_has_create_room_msg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppRequest::clear_has_create_room_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppRequest::clear_create_room_msg() {
  if (create_room_msg_ != NULL) create_room_msg_->::netmsg::AppRequest_CreateRoom::Clear();
  clear_has_create_room_msg();
}
inline const ::netmsg::AppRequest_CreateRoom& AppRequest::create_room_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.create_room_msg)
  return create_room_msg_ != NULL ? *create_room_msg_ : *default_instance_->create_room_msg_;
}
inline ::netmsg::AppRequest_CreateRoom* AppRequest::mutable_create_room_msg() {
  set_has_create_room_msg();
  if (create_room_msg_ == NULL) create_room_msg_ = new ::netmsg::AppRequest_CreateRoom;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.create_room_msg)
  return create_room_msg_;
}
inline ::netmsg::AppRequest_CreateRoom* AppRequest::release_create_room_msg() {
  clear_has_create_room_msg();
  ::netmsg::AppRequest_CreateRoom* temp = create_room_msg_;
  create_room_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_create_room_msg(::netmsg::AppRequest_CreateRoom* create_room_msg) {
  delete create_room_msg_;
  create_room_msg_ = create_room_msg;
  if (create_room_msg) {
    set_has_create_room_msg();
  } else {
    clear_has_create_room_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.create_room_msg)
}

// optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
inline bool AppRequest::has_room_post_msg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppRequest::set_has_room_post_msg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppRequest::clear_has_room_post_msg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppRequest::clear_room_post_msg() {
  if (room_post_msg_ != NULL) room_post_msg_->::netmsg::AppRequest_RoomPostMessage::Clear();
  clear_has_room_post_msg();
}
inline const ::netmsg::AppRequest_RoomPostMessage& AppRequest::room_post_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.room_post_msg)
  return room_post_msg_ != NULL ? *room_post_msg_ : *default_instance_->room_post_msg_;
}
inline ::netmsg::AppRequest_RoomPostMessage* AppRequest::mutable_room_post_msg() {
  set_has_room_post_msg();
  if (room_post_msg_ == NULL) room_post_msg_ = new ::netmsg::AppRequest_RoomPostMessage;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.room_post_msg)
  return room_post_msg_;
}
inline ::netmsg::AppRequest_RoomPostMessage* AppRequest::release_room_post_msg() {
  clear_has_room_post_msg();
  ::netmsg::AppRequest_RoomPostMessage* temp = room_post_msg_;
  room_post_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_room_post_msg(::netmsg::AppRequest_RoomPostMessage* room_post_msg) {
  delete room_post_msg_;
  room_post_msg_ = room_post_msg;
  if (room_post_msg) {
    set_has_room_post_msg();
  } else {
    clear_has_room_post_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.room_post_msg)
}

// optional bool logout_request = 15;
inline bool AppRequest::has_logout_request() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppRequest::set_has_logout_request() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppRequest::clear_has_logout_request() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppRequest::clear_logout_request() {
  logout_request_ = false;
  clear_has_logout_request();
}
inline bool AppRequest::logout_request() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.logout_request)
  return logout_request_;
}
inline void AppRequest::set_logout_request(bool value) {
  set_has_logout_request();
  logout_request_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.logout_request)
}

// -------------------------------------------------------------------

// AppReply_CreateRoomReply

// optional bytes success_uuid = 1;
inline bool AppReply_CreateRoomReply::has_success_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply_CreateRoomReply::set_has_success_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply_CreateRoomReply::clear_has_success_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply_CreateRoomReply::clear_success_uuid() {
  if (success_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    success_uuid_->clear();
  }
  clear_has_success_uuid();
}
inline const ::std::string& AppReply_CreateRoomReply::success_uuid() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.CreateRoomReply.success_uuid)
  return *success_uuid_;
}
inline void AppReply_CreateRoomReply::set_success_uuid(const ::std::string& value) {
  set_has_success_uuid();
  if (success_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    success_uuid_ = new ::std::string;
  }
  success_uuid_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.CreateRoomReply.success_uuid)
}
inline void AppReply_CreateRoomReply::set_success_uuid(const char* value) {
  set_has_success_uuid();
  if (success_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    success_uuid_ = new ::std::string;
  }
  success_uuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.CreateRoomReply.success_uuid)
}
inline void AppReply_CreateRoomReply::set_success_uuid(const void* value, size_t size) {
  set_has_success_uuid();
  if (success_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    success_uuid_ = new ::std::string;
  }
  success_uuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.CreateRoomReply.success_uuid)
}
inline ::std::string* AppReply_CreateRoomReply::mutable_success_uuid() {
  set_has_success_uuid();
  if (success_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    success_uuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.CreateRoomReply.success_uuid)
  return success_uuid_;
}
inline ::std::string* AppReply_CreateRoomReply::release_success_uuid() {
  clear_has_success_uuid();
  if (success_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = success_uuid_;
    success_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_CreateRoomReply::set_allocated_success_uuid(::std::string* success_uuid) {
  if (success_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete success_uuid_;
  }
  if (success_uuid) {
    set_has_success_uuid();
    success_uuid_ = success_uuid;
  } else {
    clear_has_success_uuid();
    success_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.CreateRoomReply.success_uuid)
}

// -------------------------------------------------------------------

// AppReply

// required bool success = 1;
inline bool AppReply::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool AppReply::success() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.success)
  return success_;
}
inline void AppReply::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.success)
}

// optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
inline bool AppReply::has_create_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppReply::set_has_create_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppReply::clear_has_create_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppReply::clear_create_reply() {
  if (create_reply_ != NULL) create_reply_->::netmsg::AppReply_CreateRoomReply::Clear();
  clear_has_create_reply();
}
inline const ::netmsg::AppReply_CreateRoomReply& AppReply::create_reply() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.create_reply)
  return create_reply_ != NULL ? *create_reply_ : *default_instance_->create_reply_;
}
inline ::netmsg::AppReply_CreateRoomReply* AppReply::mutable_create_reply() {
  set_has_create_reply();
  if (create_reply_ == NULL) create_reply_ = new ::netmsg::AppReply_CreateRoomReply;
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.create_reply)
  return create_reply_;
}
inline ::netmsg::AppReply_CreateRoomReply* AppReply::release_create_reply() {
  clear_has_create_reply();
  ::netmsg::AppReply_CreateRoomReply* temp = create_reply_;
  create_reply_ = NULL;
  return temp;
}
inline void AppReply::set_allocated_create_reply(::netmsg::AppReply_CreateRoomReply* create_reply) {
  delete create_reply_;
  create_reply_ = create_reply;
  if (create_reply) {
    set_has_create_reply();
  } else {
    clear_has_create_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.create_reply)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace netmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::netmsg::AppRequest_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::netmsg::AppRequest_MessageType>() {
  return ::netmsg::AppRequest_MessageType_descriptor();
}
template <> struct is_proto_enum< ::netmsg::AppRequest_RoomType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::netmsg::AppRequest_RoomType>() {
  return ::netmsg::AppRequest_RoomType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_social_2eproto__INCLUDED
