// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social.proto

#ifndef PROTOBUF_social_2eproto__INCLUDED
#define PROTOBUF_social_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace netmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_social_2eproto();
void protobuf_AssignDesc_social_2eproto();
void protobuf_ShutdownFile_social_2eproto();

class AppRequest;
class AppRequest_RegisterMessage;
class AppRequest_LoginMessage;
class AppRequest_CreateEvent;
class AppRequest_EventAccept;
class AppRequest_EventReject;
class AppRequest_EventInvite;
class AppRequest_PollInvitedEvents;
class AppRequest_PollAcceptedEvents;
class AppRequest_FriendRequest;
class AppRequest_AcceptFriendRequest;
class AppRequest_AlbumPhoto;
class AppRequest_PhotoAlbum;
class AppRequest_UpdateProfile;
class AppReply;
class AppReply_EventUUID;
class AppReply_User;
class AppReply_FriendRequest;
class AppReply_EventInfo;

enum AppRequest_MessageType {
  AppRequest_MessageType_tFriendRequest = 1,
  AppRequest_MessageType_tGetFriendRequests = 2,
  AppRequest_MessageType_tGetFriends = 3,
  AppRequest_MessageType_tPollNotifications = 14,
  AppRequest_MessageType_tAcceptFriendRequest = 4,
  AppRequest_MessageType_tEventCreate = 5,
  AppRequest_MessageType_tEventInvite = 6,
  AppRequest_MessageType_tEventAccept = 7,
  AppRequest_MessageType_tEventReject = 8,
  AppRequest_MessageType_tRegistration = 9,
  AppRequest_MessageType_tLogin = 10,
  AppRequest_MessageType_tUpdateProfile = 11,
  AppRequest_MessageType_tPollAcceptedEvents = 12,
  AppRequest_MessageType_tPollInvitedEvents = 13,
  AppRequest_MessageType_tUserInfoRequest = 15
};
bool AppRequest_MessageType_IsValid(int value);
const AppRequest_MessageType AppRequest_MessageType_MessageType_MIN = AppRequest_MessageType_tFriendRequest;
const AppRequest_MessageType AppRequest_MessageType_MessageType_MAX = AppRequest_MessageType_tUserInfoRequest;
const int AppRequest_MessageType_MessageType_ARRAYSIZE = AppRequest_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppRequest_MessageType_descriptor();
inline const ::std::string& AppRequest_MessageType_Name(AppRequest_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppRequest_MessageType_descriptor(), value);
}
inline bool AppRequest_MessageType_Parse(
    const ::std::string& name, AppRequest_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppRequest_MessageType>(
    AppRequest_MessageType_descriptor(), name, value);
}
enum AppReply_ResponseType {
  AppReply_ResponseType_tSuccess = 1,
  AppReply_ResponseType_tMissingInput = 2
};
bool AppReply_ResponseType_IsValid(int value);
const AppReply_ResponseType AppReply_ResponseType_ResponseType_MIN = AppReply_ResponseType_tSuccess;
const AppReply_ResponseType AppReply_ResponseType_ResponseType_MAX = AppReply_ResponseType_tMissingInput;
const int AppReply_ResponseType_ResponseType_ARRAYSIZE = AppReply_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppReply_ResponseType_descriptor();
inline const ::std::string& AppReply_ResponseType_Name(AppReply_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppReply_ResponseType_descriptor(), value);
}
inline bool AppReply_ResponseType_Parse(
    const ::std::string& name, AppReply_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppReply_ResponseType>(
    AppReply_ResponseType_descriptor(), name, value);
}
// ===================================================================

class AppRequest_RegisterMessage : public ::google::protobuf::Message {
 public:
  AppRequest_RegisterMessage();
  virtual ~AppRequest_RegisterMessage();

  AppRequest_RegisterMessage(const AppRequest_RegisterMessage& from);

  inline AppRequest_RegisterMessage& operator=(const AppRequest_RegisterMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_RegisterMessage& default_instance();

  void Swap(AppRequest_RegisterMessage* other);

  // implements Message ----------------------------------------------

  AppRequest_RegisterMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_RegisterMessage& from);
  void MergeFrom(const AppRequest_RegisterMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string password_hash = 1;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 1;
  inline const ::std::string& password_hash() const;
  inline void set_password_hash(const ::std::string& value);
  inline void set_password_hash(const char* value);
  inline void set_password_hash(const char* value, size_t size);
  inline ::std::string* mutable_password_hash();
  inline ::std::string* release_password_hash();
  inline void set_allocated_password_hash(::std::string* password_hash);

  // required string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // required bool is_male = 3;
  inline bool has_is_male() const;
  inline void clear_is_male();
  static const int kIsMaleFieldNumber = 3;
  inline bool is_male() const;
  inline void set_is_male(bool value);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.RegisterMessage)
 private:
  inline void set_has_password_hash();
  inline void clear_has_password_hash();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_is_male();
  inline void clear_has_is_male();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* password_hash_;
  ::std::string* nickname_;
  bool is_male_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_RegisterMessage* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_LoginMessage : public ::google::protobuf::Message {
 public:
  AppRequest_LoginMessage();
  virtual ~AppRequest_LoginMessage();

  AppRequest_LoginMessage(const AppRequest_LoginMessage& from);

  inline AppRequest_LoginMessage& operator=(const AppRequest_LoginMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_LoginMessage& default_instance();

  void Swap(AppRequest_LoginMessage* other);

  // implements Message ----------------------------------------------

  AppRequest_LoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_LoginMessage& from);
  void MergeFrom(const AppRequest_LoginMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string password_hash = 1;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 1;
  inline const ::std::string& password_hash() const;
  inline void set_password_hash(const ::std::string& value);
  inline void set_password_hash(const char* value);
  inline void set_password_hash(const char* value, size_t size);
  inline ::std::string* mutable_password_hash();
  inline ::std::string* release_password_hash();
  inline void set_allocated_password_hash(::std::string* password_hash);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.LoginMessage)
 private:
  inline void set_has_password_hash();
  inline void clear_has_password_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* password_hash_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_LoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_CreateEvent : public ::google::protobuf::Message {
 public:
  AppRequest_CreateEvent();
  virtual ~AppRequest_CreateEvent();

  AppRequest_CreateEvent(const AppRequest_CreateEvent& from);

  inline AppRequest_CreateEvent& operator=(const AppRequest_CreateEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_CreateEvent& default_instance();

  void Swap(AppRequest_CreateEvent* other);

  // implements Message ----------------------------------------------

  AppRequest_CreateEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_CreateEvent& from);
  void MergeFrom(const AppRequest_CreateEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required string location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // required int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // required bool is_public = 4;
  inline bool has_is_public() const;
  inline void clear_is_public();
  static const int kIsPublicFieldNumber = 4;
  inline bool is_public() const;
  inline void set_is_public(bool value);

  // required bytes event_uuid1 = 5;
  inline bool has_event_uuid1() const;
  inline void clear_event_uuid1();
  static const int kEventUuid1FieldNumber = 5;
  inline const ::std::string& event_uuid1() const;
  inline void set_event_uuid1(const ::std::string& value);
  inline void set_event_uuid1(const char* value);
  inline void set_event_uuid1(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid1();
  inline ::std::string* release_event_uuid1();
  inline void set_allocated_event_uuid1(::std::string* event_uuid1);

  // required string description = 6;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 6;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // repeated int64 invited_users = 7;
  inline int invited_users_size() const;
  inline void clear_invited_users();
  static const int kInvitedUsersFieldNumber = 7;
  inline ::google::protobuf::int64 invited_users(int index) const;
  inline void set_invited_users(int index, ::google::protobuf::int64 value);
  inline void add_invited_users(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      invited_users() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_invited_users();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.CreateEvent)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_is_public();
  inline void clear_has_is_public();
  inline void set_has_event_uuid1();
  inline void clear_has_event_uuid1();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* location_;
  ::google::protobuf::int64 time_;
  ::std::string* event_uuid1_;
  ::std::string* description_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > invited_users_;
  bool is_public_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_CreateEvent* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_EventAccept : public ::google::protobuf::Message {
 public:
  AppRequest_EventAccept();
  virtual ~AppRequest_EventAccept();

  AppRequest_EventAccept(const AppRequest_EventAccept& from);

  inline AppRequest_EventAccept& operator=(const AppRequest_EventAccept& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_EventAccept& default_instance();

  void Swap(AppRequest_EventAccept* other);

  // implements Message ----------------------------------------------

  AppRequest_EventAccept* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_EventAccept& from);
  void MergeFrom(const AppRequest_EventAccept& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes event_uuid1 = 1;
  inline bool has_event_uuid1() const;
  inline void clear_event_uuid1();
  static const int kEventUuid1FieldNumber = 1;
  inline const ::std::string& event_uuid1() const;
  inline void set_event_uuid1(const ::std::string& value);
  inline void set_event_uuid1(const char* value);
  inline void set_event_uuid1(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid1();
  inline ::std::string* release_event_uuid1();
  inline void set_allocated_event_uuid1(::std::string* event_uuid1);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.EventAccept)
 private:
  inline void set_has_event_uuid1();
  inline void clear_has_event_uuid1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* event_uuid1_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_EventAccept* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_EventReject : public ::google::protobuf::Message {
 public:
  AppRequest_EventReject();
  virtual ~AppRequest_EventReject();

  AppRequest_EventReject(const AppRequest_EventReject& from);

  inline AppRequest_EventReject& operator=(const AppRequest_EventReject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_EventReject& default_instance();

  void Swap(AppRequest_EventReject* other);

  // implements Message ----------------------------------------------

  AppRequest_EventReject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_EventReject& from);
  void MergeFrom(const AppRequest_EventReject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes event_uuid1 = 1;
  inline bool has_event_uuid1() const;
  inline void clear_event_uuid1();
  static const int kEventUuid1FieldNumber = 1;
  inline const ::std::string& event_uuid1() const;
  inline void set_event_uuid1(const ::std::string& value);
  inline void set_event_uuid1(const char* value);
  inline void set_event_uuid1(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid1();
  inline ::std::string* release_event_uuid1();
  inline void set_allocated_event_uuid1(::std::string* event_uuid1);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.EventReject)
 private:
  inline void set_has_event_uuid1();
  inline void clear_has_event_uuid1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* event_uuid1_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_EventReject* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_EventInvite : public ::google::protobuf::Message {
 public:
  AppRequest_EventInvite();
  virtual ~AppRequest_EventInvite();

  AppRequest_EventInvite(const AppRequest_EventInvite& from);

  inline AppRequest_EventInvite& operator=(const AppRequest_EventInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_EventInvite& default_instance();

  void Swap(AppRequest_EventInvite* other);

  // implements Message ----------------------------------------------

  AppRequest_EventInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_EventInvite& from);
  void MergeFrom(const AppRequest_EventInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes event_uuid1 = 1;
  inline bool has_event_uuid1() const;
  inline void clear_event_uuid1();
  static const int kEventUuid1FieldNumber = 1;
  inline const ::std::string& event_uuid1() const;
  inline void set_event_uuid1(const ::std::string& value);
  inline void set_event_uuid1(const char* value);
  inline void set_event_uuid1(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid1();
  inline ::std::string* release_event_uuid1();
  inline void set_allocated_event_uuid1(::std::string* event_uuid1);

  // repeated int64 invited_users = 2;
  inline int invited_users_size() const;
  inline void clear_invited_users();
  static const int kInvitedUsersFieldNumber = 2;
  inline ::google::protobuf::int64 invited_users(int index) const;
  inline void set_invited_users(int index, ::google::protobuf::int64 value);
  inline void add_invited_users(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      invited_users() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_invited_users();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.EventInvite)
 private:
  inline void set_has_event_uuid1();
  inline void clear_has_event_uuid1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* event_uuid1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > invited_users_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_EventInvite* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_PollInvitedEvents : public ::google::protobuf::Message {
 public:
  AppRequest_PollInvitedEvents();
  virtual ~AppRequest_PollInvitedEvents();

  AppRequest_PollInvitedEvents(const AppRequest_PollInvitedEvents& from);

  inline AppRequest_PollInvitedEvents& operator=(const AppRequest_PollInvitedEvents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_PollInvitedEvents& default_instance();

  void Swap(AppRequest_PollInvitedEvents* other);

  // implements Message ----------------------------------------------

  AppRequest_PollInvitedEvents* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_PollInvitedEvents& from);
  void MergeFrom(const AppRequest_PollInvitedEvents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  inline ::google::protobuf::int64 offset() const;
  inline void set_offset(::google::protobuf::int64 value);

  // optional int64 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int64 amount() const;
  inline void set_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.PollInvitedEvents)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 amount_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_PollInvitedEvents* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_PollAcceptedEvents : public ::google::protobuf::Message {
 public:
  AppRequest_PollAcceptedEvents();
  virtual ~AppRequest_PollAcceptedEvents();

  AppRequest_PollAcceptedEvents(const AppRequest_PollAcceptedEvents& from);

  inline AppRequest_PollAcceptedEvents& operator=(const AppRequest_PollAcceptedEvents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_PollAcceptedEvents& default_instance();

  void Swap(AppRequest_PollAcceptedEvents* other);

  // implements Message ----------------------------------------------

  AppRequest_PollAcceptedEvents* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_PollAcceptedEvents& from);
  void MergeFrom(const AppRequest_PollAcceptedEvents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  inline ::google::protobuf::int64 offset() const;
  inline void set_offset(::google::protobuf::int64 value);

  // optional int64 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int64 amount() const;
  inline void set_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.PollAcceptedEvents)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 amount_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_PollAcceptedEvents* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_FriendRequest : public ::google::protobuf::Message {
 public:
  AppRequest_FriendRequest();
  virtual ~AppRequest_FriendRequest();

  AppRequest_FriendRequest(const AppRequest_FriendRequest& from);

  inline AppRequest_FriendRequest& operator=(const AppRequest_FriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_FriendRequest& default_instance();

  void Swap(AppRequest_FriendRequest* other);

  // implements Message ----------------------------------------------

  AppRequest_FriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_FriendRequest& from);
  void MergeFrom(const AppRequest_FriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 destination_user = 1;
  inline bool has_destination_user() const;
  inline void clear_destination_user();
  static const int kDestinationUserFieldNumber = 1;
  inline ::google::protobuf::int64 destination_user() const;
  inline void set_destination_user(::google::protobuf::int64 value);

  // required string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.FriendRequest)
 private:
  inline void set_has_destination_user();
  inline void clear_has_destination_user();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 destination_user_;
  ::std::string* message_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_FriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_AcceptFriendRequest : public ::google::protobuf::Message {
 public:
  AppRequest_AcceptFriendRequest();
  virtual ~AppRequest_AcceptFriendRequest();

  AppRequest_AcceptFriendRequest(const AppRequest_AcceptFriendRequest& from);

  inline AppRequest_AcceptFriendRequest& operator=(const AppRequest_AcceptFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_AcceptFriendRequest& default_instance();

  void Swap(AppRequest_AcceptFriendRequest* other);

  // implements Message ----------------------------------------------

  AppRequest_AcceptFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_AcceptFriendRequest& from);
  void MergeFrom(const AppRequest_AcceptFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 requesting_user_id = 1;
  inline bool has_requesting_user_id() const;
  inline void clear_requesting_user_id();
  static const int kRequestingUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 requesting_user_id() const;
  inline void set_requesting_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.AcceptFriendRequest)
 private:
  inline void set_has_requesting_user_id();
  inline void clear_has_requesting_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 requesting_user_id_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_AcceptFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_AlbumPhoto : public ::google::protobuf::Message {
 public:
  AppRequest_AlbumPhoto();
  virtual ~AppRequest_AlbumPhoto();

  AppRequest_AlbumPhoto(const AppRequest_AlbumPhoto& from);

  inline AppRequest_AlbumPhoto& operator=(const AppRequest_AlbumPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_AlbumPhoto& default_instance();

  void Swap(AppRequest_AlbumPhoto* other);

  // implements Message ----------------------------------------------

  AppRequest_AlbumPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_AlbumPhoto& from);
  void MergeFrom(const AppRequest_AlbumPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes photo = 1;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 1;
  inline const ::std::string& photo() const;
  inline void set_photo(const ::std::string& value);
  inline void set_photo(const char* value);
  inline void set_photo(const void* value, size_t size);
  inline ::std::string* mutable_photo();
  inline ::std::string* release_photo();
  inline void set_allocated_photo(::std::string* photo);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.AlbumPhoto)
 private:
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* photo_;
  ::std::string* description_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_AlbumPhoto* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_PhotoAlbum : public ::google::protobuf::Message {
 public:
  AppRequest_PhotoAlbum();
  virtual ~AppRequest_PhotoAlbum();

  AppRequest_PhotoAlbum(const AppRequest_PhotoAlbum& from);

  inline AppRequest_PhotoAlbum& operator=(const AppRequest_PhotoAlbum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_PhotoAlbum& default_instance();

  void Swap(AppRequest_PhotoAlbum* other);

  // implements Message ----------------------------------------------

  AppRequest_PhotoAlbum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_PhotoAlbum& from);
  void MergeFrom(const AppRequest_PhotoAlbum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .netmsg.AppRequest.AlbumPhoto photos = 1;
  inline int photos_size() const;
  inline void clear_photos();
  static const int kPhotosFieldNumber = 1;
  inline const ::netmsg::AppRequest_AlbumPhoto& photos(int index) const;
  inline ::netmsg::AppRequest_AlbumPhoto* mutable_photos(int index);
  inline ::netmsg::AppRequest_AlbumPhoto* add_photos();
  inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_AlbumPhoto >&
      photos() const;
  inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_AlbumPhoto >*
      mutable_photos();

  // optional string AlbumDescription = 2;
  inline bool has_albumdescription() const;
  inline void clear_albumdescription();
  static const int kAlbumDescriptionFieldNumber = 2;
  inline const ::std::string& albumdescription() const;
  inline void set_albumdescription(const ::std::string& value);
  inline void set_albumdescription(const char* value);
  inline void set_albumdescription(const char* value, size_t size);
  inline ::std::string* mutable_albumdescription();
  inline ::std::string* release_albumdescription();
  inline void set_allocated_albumdescription(::std::string* albumdescription);

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.PhotoAlbum)
 private:
  inline void set_has_albumdescription();
  inline void clear_has_albumdescription();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_AlbumPhoto > photos_;
  ::std::string* albumdescription_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_PhotoAlbum* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest_UpdateProfile : public ::google::protobuf::Message {
 public:
  AppRequest_UpdateProfile();
  virtual ~AppRequest_UpdateProfile();

  AppRequest_UpdateProfile(const AppRequest_UpdateProfile& from);

  inline AppRequest_UpdateProfile& operator=(const AppRequest_UpdateProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest_UpdateProfile& default_instance();

  void Swap(AppRequest_UpdateProfile* other);

  // implements Message ----------------------------------------------

  AppRequest_UpdateProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest_UpdateProfile& from);
  void MergeFrom(const AppRequest_UpdateProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 1;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string location = 3;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 3;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string password = 5;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 5;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional bytes profile_photo = 6;
  inline bool has_profile_photo() const;
  inline void clear_profile_photo();
  static const int kProfilePhotoFieldNumber = 6;
  inline const ::std::string& profile_photo() const;
  inline void set_profile_photo(const ::std::string& value);
  inline void set_profile_photo(const char* value);
  inline void set_profile_photo(const void* value, size_t size);
  inline ::std::string* mutable_profile_photo();
  inline ::std::string* release_profile_photo();
  inline void set_allocated_profile_photo(::std::string* profile_photo);

  // repeated .netmsg.AppRequest.PhotoAlbum new_albums = 7;
  inline int new_albums_size() const;
  inline void clear_new_albums();
  static const int kNewAlbumsFieldNumber = 7;
  inline const ::netmsg::AppRequest_PhotoAlbum& new_albums(int index) const;
  inline ::netmsg::AppRequest_PhotoAlbum* mutable_new_albums(int index);
  inline ::netmsg::AppRequest_PhotoAlbum* add_new_albums();
  inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_PhotoAlbum >&
      new_albums() const;
  inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_PhotoAlbum >*
      mutable_new_albums();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest.UpdateProfile)
 private:
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_profile_photo();
  inline void clear_has_profile_photo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* email_;
  ::std::string* description_;
  ::std::string* location_;
  ::std::string* nickname_;
  ::std::string* password_;
  ::std::string* profile_photo_;
  ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_PhotoAlbum > new_albums_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest_UpdateProfile* default_instance_;
};
// -------------------------------------------------------------------

class AppRequest : public ::google::protobuf::Message {
 public:
  AppRequest();
  virtual ~AppRequest();

  AppRequest(const AppRequest& from);

  inline AppRequest& operator=(const AppRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRequest& default_instance();

  void Swap(AppRequest* other);

  // implements Message ----------------------------------------------

  AppRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppRequest& from);
  void MergeFrom(const AppRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppRequest_RegisterMessage RegisterMessage;
  typedef AppRequest_LoginMessage LoginMessage;
  typedef AppRequest_CreateEvent CreateEvent;
  typedef AppRequest_EventAccept EventAccept;
  typedef AppRequest_EventReject EventReject;
  typedef AppRequest_EventInvite EventInvite;
  typedef AppRequest_PollInvitedEvents PollInvitedEvents;
  typedef AppRequest_PollAcceptedEvents PollAcceptedEvents;
  typedef AppRequest_FriendRequest FriendRequest;
  typedef AppRequest_AcceptFriendRequest AcceptFriendRequest;
  typedef AppRequest_AlbumPhoto AlbumPhoto;
  typedef AppRequest_PhotoAlbum PhotoAlbum;
  typedef AppRequest_UpdateProfile UpdateProfile;

  typedef AppRequest_MessageType MessageType;
  static const MessageType tFriendRequest = AppRequest_MessageType_tFriendRequest;
  static const MessageType tGetFriendRequests = AppRequest_MessageType_tGetFriendRequests;
  static const MessageType tGetFriends = AppRequest_MessageType_tGetFriends;
  static const MessageType tPollNotifications = AppRequest_MessageType_tPollNotifications;
  static const MessageType tAcceptFriendRequest = AppRequest_MessageType_tAcceptFriendRequest;
  static const MessageType tEventCreate = AppRequest_MessageType_tEventCreate;
  static const MessageType tEventInvite = AppRequest_MessageType_tEventInvite;
  static const MessageType tEventAccept = AppRequest_MessageType_tEventAccept;
  static const MessageType tEventReject = AppRequest_MessageType_tEventReject;
  static const MessageType tRegistration = AppRequest_MessageType_tRegistration;
  static const MessageType tLogin = AppRequest_MessageType_tLogin;
  static const MessageType tUpdateProfile = AppRequest_MessageType_tUpdateProfile;
  static const MessageType tPollAcceptedEvents = AppRequest_MessageType_tPollAcceptedEvents;
  static const MessageType tPollInvitedEvents = AppRequest_MessageType_tPollInvitedEvents;
  static const MessageType tUserInfoRequest = AppRequest_MessageType_tUserInfoRequest;
  static inline bool MessageType_IsValid(int value) {
    return AppRequest_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    AppRequest_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    AppRequest_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    AppRequest_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return AppRequest_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return AppRequest_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return AppRequest_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 phone_id = 1;
  inline bool has_phone_id() const;
  inline void clear_phone_id();
  static const int kPhoneIdFieldNumber = 1;
  inline ::google::protobuf::int64 phone_id() const;
  inline void set_phone_id(::google::protobuf::int64 value);

  // required .netmsg.AppRequest.MessageType msg_type = 2;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::netmsg::AppRequest_MessageType msg_type() const;
  inline void set_msg_type(::netmsg::AppRequest_MessageType value);

  // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
  inline bool has_reg_msg() const;
  inline void clear_reg_msg();
  static const int kRegMsgFieldNumber = 3;
  inline const ::netmsg::AppRequest_RegisterMessage& reg_msg() const;
  inline ::netmsg::AppRequest_RegisterMessage* mutable_reg_msg();
  inline ::netmsg::AppRequest_RegisterMessage* release_reg_msg();
  inline void set_allocated_reg_msg(::netmsg::AppRequest_RegisterMessage* reg_msg);

  // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
  inline bool has_login_msg() const;
  inline void clear_login_msg();
  static const int kLoginMsgFieldNumber = 4;
  inline const ::netmsg::AppRequest_LoginMessage& login_msg() const;
  inline ::netmsg::AppRequest_LoginMessage* mutable_login_msg();
  inline ::netmsg::AppRequest_LoginMessage* release_login_msg();
  inline void set_allocated_login_msg(::netmsg::AppRequest_LoginMessage* login_msg);

  // optional .netmsg.AppRequest.CreateEvent create_event = 5;
  inline bool has_create_event() const;
  inline void clear_create_event();
  static const int kCreateEventFieldNumber = 5;
  inline const ::netmsg::AppRequest_CreateEvent& create_event() const;
  inline ::netmsg::AppRequest_CreateEvent* mutable_create_event();
  inline ::netmsg::AppRequest_CreateEvent* release_create_event();
  inline void set_allocated_create_event(::netmsg::AppRequest_CreateEvent* create_event);

  // optional .netmsg.AppRequest.EventAccept accept_event = 6;
  inline bool has_accept_event() const;
  inline void clear_accept_event();
  static const int kAcceptEventFieldNumber = 6;
  inline const ::netmsg::AppRequest_EventAccept& accept_event() const;
  inline ::netmsg::AppRequest_EventAccept* mutable_accept_event();
  inline ::netmsg::AppRequest_EventAccept* release_accept_event();
  inline void set_allocated_accept_event(::netmsg::AppRequest_EventAccept* accept_event);

  // optional .netmsg.AppRequest.EventReject reject_event = 7;
  inline bool has_reject_event() const;
  inline void clear_reject_event();
  static const int kRejectEventFieldNumber = 7;
  inline const ::netmsg::AppRequest_EventReject& reject_event() const;
  inline ::netmsg::AppRequest_EventReject* mutable_reject_event();
  inline ::netmsg::AppRequest_EventReject* release_reject_event();
  inline void set_allocated_reject_event(::netmsg::AppRequest_EventReject* reject_event);

  // optional .netmsg.AppRequest.EventInvite invite_event = 8;
  inline bool has_invite_event() const;
  inline void clear_invite_event();
  static const int kInviteEventFieldNumber = 8;
  inline const ::netmsg::AppRequest_EventInvite& invite_event() const;
  inline ::netmsg::AppRequest_EventInvite* mutable_invite_event();
  inline ::netmsg::AppRequest_EventInvite* release_invite_event();
  inline void set_allocated_invite_event(::netmsg::AppRequest_EventInvite* invite_event);

  // optional .netmsg.AppRequest.PollInvitedEvents poll_invited = 9;
  inline bool has_poll_invited() const;
  inline void clear_poll_invited();
  static const int kPollInvitedFieldNumber = 9;
  inline const ::netmsg::AppRequest_PollInvitedEvents& poll_invited() const;
  inline ::netmsg::AppRequest_PollInvitedEvents* mutable_poll_invited();
  inline ::netmsg::AppRequest_PollInvitedEvents* release_poll_invited();
  inline void set_allocated_poll_invited(::netmsg::AppRequest_PollInvitedEvents* poll_invited);

  // optional .netmsg.AppRequest.PollAcceptedEvents poll_accepted = 10;
  inline bool has_poll_accepted() const;
  inline void clear_poll_accepted();
  static const int kPollAcceptedFieldNumber = 10;
  inline const ::netmsg::AppRequest_PollAcceptedEvents& poll_accepted() const;
  inline ::netmsg::AppRequest_PollAcceptedEvents* mutable_poll_accepted();
  inline ::netmsg::AppRequest_PollAcceptedEvents* release_poll_accepted();
  inline void set_allocated_poll_accepted(::netmsg::AppRequest_PollAcceptedEvents* poll_accepted);

  // optional .netmsg.AppRequest.FriendRequest friend_request = 11;
  inline bool has_friend_request() const;
  inline void clear_friend_request();
  static const int kFriendRequestFieldNumber = 11;
  inline const ::netmsg::AppRequest_FriendRequest& friend_request() const;
  inline ::netmsg::AppRequest_FriendRequest* mutable_friend_request();
  inline ::netmsg::AppRequest_FriendRequest* release_friend_request();
  inline void set_allocated_friend_request(::netmsg::AppRequest_FriendRequest* friend_request);

  // optional .netmsg.AppRequest.AcceptFriendRequest accept_friend_request = 12;
  inline bool has_accept_friend_request() const;
  inline void clear_accept_friend_request();
  static const int kAcceptFriendRequestFieldNumber = 12;
  inline const ::netmsg::AppRequest_AcceptFriendRequest& accept_friend_request() const;
  inline ::netmsg::AppRequest_AcceptFriendRequest* mutable_accept_friend_request();
  inline ::netmsg::AppRequest_AcceptFriendRequest* release_accept_friend_request();
  inline void set_allocated_accept_friend_request(::netmsg::AppRequest_AcceptFriendRequest* accept_friend_request);

  // optional .netmsg.AppRequest.UpdateProfile update_profile = 13;
  inline bool has_update_profile() const;
  inline void clear_update_profile();
  static const int kUpdateProfileFieldNumber = 13;
  inline const ::netmsg::AppRequest_UpdateProfile& update_profile() const;
  inline ::netmsg::AppRequest_UpdateProfile* mutable_update_profile();
  inline ::netmsg::AppRequest_UpdateProfile* release_update_profile();
  inline void set_allocated_update_profile(::netmsg::AppRequest_UpdateProfile* update_profile);

  // repeated int64 request_user_info = 14;
  inline int request_user_info_size() const;
  inline void clear_request_user_info();
  static const int kRequestUserInfoFieldNumber = 14;
  inline ::google::protobuf::int64 request_user_info(int index) const;
  inline void set_request_user_info(int index, ::google::protobuf::int64 value);
  inline void add_request_user_info(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      request_user_info() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_request_user_info();

  // @@protoc_insertion_point(class_scope:netmsg.AppRequest)
 private:
  inline void set_has_phone_id();
  inline void clear_has_phone_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_reg_msg();
  inline void clear_has_reg_msg();
  inline void set_has_login_msg();
  inline void clear_has_login_msg();
  inline void set_has_create_event();
  inline void clear_has_create_event();
  inline void set_has_accept_event();
  inline void clear_has_accept_event();
  inline void set_has_reject_event();
  inline void clear_has_reject_event();
  inline void set_has_invite_event();
  inline void clear_has_invite_event();
  inline void set_has_poll_invited();
  inline void clear_has_poll_invited();
  inline void set_has_poll_accepted();
  inline void clear_has_poll_accepted();
  inline void set_has_friend_request();
  inline void clear_has_friend_request();
  inline void set_has_accept_friend_request();
  inline void clear_has_accept_friend_request();
  inline void set_has_update_profile();
  inline void clear_has_update_profile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 phone_id_;
  ::netmsg::AppRequest_RegisterMessage* reg_msg_;
  ::netmsg::AppRequest_LoginMessage* login_msg_;
  ::netmsg::AppRequest_CreateEvent* create_event_;
  ::netmsg::AppRequest_EventAccept* accept_event_;
  ::netmsg::AppRequest_EventReject* reject_event_;
  ::netmsg::AppRequest_EventInvite* invite_event_;
  ::netmsg::AppRequest_PollInvitedEvents* poll_invited_;
  ::netmsg::AppRequest_PollAcceptedEvents* poll_accepted_;
  ::netmsg::AppRequest_FriendRequest* friend_request_;
  ::netmsg::AppRequest_AcceptFriendRequest* accept_friend_request_;
  ::netmsg::AppRequest_UpdateProfile* update_profile_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > request_user_info_;
  int msg_type_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppRequest* default_instance_;
};
// -------------------------------------------------------------------

class AppReply_EventUUID : public ::google::protobuf::Message {
 public:
  AppReply_EventUUID();
  virtual ~AppReply_EventUUID();

  AppReply_EventUUID(const AppReply_EventUUID& from);

  inline AppReply_EventUUID& operator=(const AppReply_EventUUID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply_EventUUID& default_instance();

  void Swap(AppReply_EventUUID* other);

  // implements Message ----------------------------------------------

  AppReply_EventUUID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply_EventUUID& from);
  void MergeFrom(const AppReply_EventUUID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes event_uuid1 = 1;
  inline bool has_event_uuid1() const;
  inline void clear_event_uuid1();
  static const int kEventUuid1FieldNumber = 1;
  inline const ::std::string& event_uuid1() const;
  inline void set_event_uuid1(const ::std::string& value);
  inline void set_event_uuid1(const char* value);
  inline void set_event_uuid1(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid1();
  inline ::std::string* release_event_uuid1();
  inline void set_allocated_event_uuid1(::std::string* event_uuid1);

  // @@protoc_insertion_point(class_scope:netmsg.AppReply.EventUUID)
 private:
  inline void set_has_event_uuid1();
  inline void clear_has_event_uuid1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* event_uuid1_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply_EventUUID* default_instance_;
};
// -------------------------------------------------------------------

class AppReply_User : public ::google::protobuf::Message {
 public:
  AppReply_User();
  virtual ~AppReply_User();

  AppReply_User(const AppReply_User& from);

  inline AppReply_User& operator=(const AppReply_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply_User& default_instance();

  void Swap(AppReply_User* other);

  // implements Message ----------------------------------------------

  AppReply_User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply_User& from);
  void MergeFrom(const AppReply_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 phone_number = 1;
  inline bool has_phone_number() const;
  inline void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  inline ::google::protobuf::int64 phone_number() const;
  inline void set_phone_number(::google::protobuf::int64 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // required bool is_male = 3;
  inline bool has_is_male() const;
  inline void clear_is_male();
  static const int kIsMaleFieldNumber = 3;
  inline bool is_male() const;
  inline void set_is_male(bool value);

  // optional bytes profile_photo = 4;
  inline bool has_profile_photo() const;
  inline void clear_profile_photo();
  static const int kProfilePhotoFieldNumber = 4;
  inline const ::std::string& profile_photo() const;
  inline void set_profile_photo(const ::std::string& value);
  inline void set_profile_photo(const char* value);
  inline void set_profile_photo(const void* value, size_t size);
  inline ::std::string* mutable_profile_photo();
  inline ::std::string* release_profile_photo();
  inline void set_allocated_profile_photo(::std::string* profile_photo);

  // optional string email = 5;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 5;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional string description = 6;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 6;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string location = 7;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 7;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // @@protoc_insertion_point(class_scope:netmsg.AppReply.User)
 private:
  inline void set_has_phone_number();
  inline void clear_has_phone_number();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_is_male();
  inline void clear_has_is_male();
  inline void set_has_profile_photo();
  inline void clear_has_profile_photo();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 phone_number_;
  ::std::string* nickname_;
  ::std::string* profile_photo_;
  ::std::string* email_;
  ::std::string* description_;
  ::std::string* location_;
  bool is_male_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply_User* default_instance_;
};
// -------------------------------------------------------------------

class AppReply_FriendRequest : public ::google::protobuf::Message {
 public:
  AppReply_FriendRequest();
  virtual ~AppReply_FriendRequest();

  AppReply_FriendRequest(const AppReply_FriendRequest& from);

  inline AppReply_FriendRequest& operator=(const AppReply_FriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply_FriendRequest& default_instance();

  void Swap(AppReply_FriendRequest* other);

  // implements Message ----------------------------------------------

  AppReply_FriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply_FriendRequest& from);
  void MergeFrom(const AppReply_FriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 request_origin_user_id = 1;
  inline bool has_request_origin_user_id() const;
  inline void clear_request_origin_user_id();
  static const int kRequestOriginUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 request_origin_user_id() const;
  inline void set_request_origin_user_id(::google::protobuf::int64 value);

  // required string request_message = 2;
  inline bool has_request_message() const;
  inline void clear_request_message();
  static const int kRequestMessageFieldNumber = 2;
  inline const ::std::string& request_message() const;
  inline void set_request_message(const ::std::string& value);
  inline void set_request_message(const char* value);
  inline void set_request_message(const char* value, size_t size);
  inline ::std::string* mutable_request_message();
  inline ::std::string* release_request_message();
  inline void set_allocated_request_message(::std::string* request_message);

  // @@protoc_insertion_point(class_scope:netmsg.AppReply.FriendRequest)
 private:
  inline void set_has_request_origin_user_id();
  inline void clear_has_request_origin_user_id();
  inline void set_has_request_message();
  inline void clear_has_request_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 request_origin_user_id_;
  ::std::string* request_message_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply_FriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AppReply_EventInfo : public ::google::protobuf::Message {
 public:
  AppReply_EventInfo();
  virtual ~AppReply_EventInfo();

  AppReply_EventInfo(const AppReply_EventInfo& from);

  inline AppReply_EventInfo& operator=(const AppReply_EventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply_EventInfo& default_instance();

  void Swap(AppReply_EventInfo* other);

  // implements Message ----------------------------------------------

  AppReply_EventInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply_EventInfo& from);
  void MergeFrom(const AppReply_EventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required string location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // required int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // required bytes event_uuid = 4;
  inline bool has_event_uuid() const;
  inline void clear_event_uuid();
  static const int kEventUuidFieldNumber = 4;
  inline const ::std::string& event_uuid() const;
  inline void set_event_uuid(const ::std::string& value);
  inline void set_event_uuid(const char* value);
  inline void set_event_uuid(const void* value, size_t size);
  inline ::std::string* mutable_event_uuid();
  inline ::std::string* release_event_uuid();
  inline void set_allocated_event_uuid(::std::string* event_uuid);

  // required bool is_public = 5;
  inline bool has_is_public() const;
  inline void clear_is_public();
  static const int kIsPublicFieldNumber = 5;
  inline bool is_public() const;
  inline void set_is_public(bool value);

  // required string description = 6;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 6;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // repeated int64 accepted_users = 7;
  inline int accepted_users_size() const;
  inline void clear_accepted_users();
  static const int kAcceptedUsersFieldNumber = 7;
  inline ::google::protobuf::int64 accepted_users(int index) const;
  inline void set_accepted_users(int index, ::google::protobuf::int64 value);
  inline void add_accepted_users(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      accepted_users() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_accepted_users();

  // @@protoc_insertion_point(class_scope:netmsg.AppReply.EventInfo)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_event_uuid();
  inline void clear_has_event_uuid();
  inline void set_has_is_public();
  inline void clear_has_is_public();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* location_;
  ::google::protobuf::int64 time_;
  ::std::string* event_uuid_;
  ::std::string* description_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > accepted_users_;
  bool is_public_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply_EventInfo* default_instance_;
};
// -------------------------------------------------------------------

class AppReply : public ::google::protobuf::Message {
 public:
  AppReply();
  virtual ~AppReply();

  AppReply(const AppReply& from);

  inline AppReply& operator=(const AppReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppReply& default_instance();

  void Swap(AppReply* other);

  // implements Message ----------------------------------------------

  AppReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppReply& from);
  void MergeFrom(const AppReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppReply_EventUUID EventUUID;
  typedef AppReply_User User;
  typedef AppReply_FriendRequest FriendRequest;
  typedef AppReply_EventInfo EventInfo;

  typedef AppReply_ResponseType ResponseType;
  static const ResponseType tSuccess = AppReply_ResponseType_tSuccess;
  static const ResponseType tMissingInput = AppReply_ResponseType_tMissingInput;
  static inline bool ResponseType_IsValid(int value) {
    return AppReply_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    AppReply_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    AppReply_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    AppReply_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return AppReply_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return AppReply_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return AppReply_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .netmsg.AppReply.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::netmsg::AppReply_ResponseType response_type() const;
  inline void set_response_type(::netmsg::AppReply_ResponseType value);

  // optional .netmsg.AppReply.EventUUID event_uuid = 2;
  inline bool has_event_uuid() const;
  inline void clear_event_uuid();
  static const int kEventUuidFieldNumber = 2;
  inline const ::netmsg::AppReply_EventUUID& event_uuid() const;
  inline ::netmsg::AppReply_EventUUID* mutable_event_uuid();
  inline ::netmsg::AppReply_EventUUID* release_event_uuid();
  inline void set_allocated_event_uuid(::netmsg::AppReply_EventUUID* event_uuid);

  // repeated .netmsg.AppReply.User users = 3;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 3;
  inline const ::netmsg::AppReply_User& users(int index) const;
  inline ::netmsg::AppReply_User* mutable_users(int index);
  inline ::netmsg::AppReply_User* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_User >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_User >*
      mutable_users();

  // repeated .netmsg.AppReply.FriendRequest friend_requests = 4;
  inline int friend_requests_size() const;
  inline void clear_friend_requests();
  static const int kFriendRequestsFieldNumber = 4;
  inline const ::netmsg::AppReply_FriendRequest& friend_requests(int index) const;
  inline ::netmsg::AppReply_FriendRequest* mutable_friend_requests(int index);
  inline ::netmsg::AppReply_FriendRequest* add_friend_requests();
  inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_FriendRequest >&
      friend_requests() const;
  inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_FriendRequest >*
      mutable_friend_requests();

  // repeated .netmsg.AppReply.EventInfo event_info = 5;
  inline int event_info_size() const;
  inline void clear_event_info();
  static const int kEventInfoFieldNumber = 5;
  inline const ::netmsg::AppReply_EventInfo& event_info(int index) const;
  inline ::netmsg::AppReply_EventInfo* mutable_event_info(int index);
  inline ::netmsg::AppReply_EventInfo* add_event_info();
  inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_EventInfo >&
      event_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_EventInfo >*
      mutable_event_info();

  // repeated int64 accepted_friends = 6;
  inline int accepted_friends_size() const;
  inline void clear_accepted_friends();
  static const int kAcceptedFriendsFieldNumber = 6;
  inline ::google::protobuf::int64 accepted_friends(int index) const;
  inline void set_accepted_friends(int index, ::google::protobuf::int64 value);
  inline void add_accepted_friends(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      accepted_friends() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_accepted_friends();

  // @@protoc_insertion_point(class_scope:netmsg.AppReply)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();
  inline void set_has_event_uuid();
  inline void clear_has_event_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::netmsg::AppReply_EventUUID* event_uuid_;
  ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_User > users_;
  ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_FriendRequest > friend_requests_;
  ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_EventInfo > event_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > accepted_friends_;
  int response_type_;
  friend void  protobuf_AddDesc_social_2eproto();
  friend void protobuf_AssignDesc_social_2eproto();
  friend void protobuf_ShutdownFile_social_2eproto();

  void InitAsDefaultInstance();
  static AppReply* default_instance_;
};
// ===================================================================


// ===================================================================

// AppRequest_RegisterMessage

// required string password_hash = 1;
inline bool AppRequest_RegisterMessage::has_password_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_password_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_RegisterMessage::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_RegisterMessage::clear_password_hash() {
  if (password_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_->clear();
  }
  clear_has_password_hash();
}
inline const ::std::string& AppRequest_RegisterMessage::password_hash() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.password_hash)
  return *password_hash_;
}
inline void AppRequest_RegisterMessage::set_password_hash(const ::std::string& value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.password_hash)
}
inline void AppRequest_RegisterMessage::set_password_hash(const char* value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RegisterMessage.password_hash)
}
inline void AppRequest_RegisterMessage::set_password_hash(const char* value, size_t size) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RegisterMessage.password_hash)
}
inline ::std::string* AppRequest_RegisterMessage::mutable_password_hash() {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RegisterMessage.password_hash)
  return password_hash_;
}
inline ::std::string* AppRequest_RegisterMessage::release_password_hash() {
  clear_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_hash_;
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RegisterMessage::set_allocated_password_hash(::std::string* password_hash) {
  if (password_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_hash_;
  }
  if (password_hash) {
    set_has_password_hash();
    password_hash_ = password_hash;
  } else {
    clear_has_password_hash();
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RegisterMessage.password_hash)
}

// required string nickname = 2;
inline bool AppRequest_RegisterMessage::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_RegisterMessage::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_RegisterMessage::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& AppRequest_RegisterMessage::nickname() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.nickname)
  return *nickname_;
}
inline void AppRequest_RegisterMessage::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.nickname)
}
inline void AppRequest_RegisterMessage::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.RegisterMessage.nickname)
}
inline void AppRequest_RegisterMessage::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.RegisterMessage.nickname)
}
inline ::std::string* AppRequest_RegisterMessage::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.RegisterMessage.nickname)
  return nickname_;
}
inline ::std::string* AppRequest_RegisterMessage::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_RegisterMessage::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.RegisterMessage.nickname)
}

// required bool is_male = 3;
inline bool AppRequest_RegisterMessage::has_is_male() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest_RegisterMessage::set_has_is_male() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest_RegisterMessage::clear_has_is_male() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest_RegisterMessage::clear_is_male() {
  is_male_ = false;
  clear_has_is_male();
}
inline bool AppRequest_RegisterMessage::is_male() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.RegisterMessage.is_male)
  return is_male_;
}
inline void AppRequest_RegisterMessage::set_is_male(bool value) {
  set_has_is_male();
  is_male_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.RegisterMessage.is_male)
}

// -------------------------------------------------------------------

// AppRequest_LoginMessage

// required string password_hash = 1;
inline bool AppRequest_LoginMessage::has_password_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_LoginMessage::set_has_password_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_LoginMessage::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_LoginMessage::clear_password_hash() {
  if (password_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_->clear();
  }
  clear_has_password_hash();
}
inline const ::std::string& AppRequest_LoginMessage::password_hash() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.LoginMessage.password_hash)
  return *password_hash_;
}
inline void AppRequest_LoginMessage::set_password_hash(const ::std::string& value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.LoginMessage.password_hash)
}
inline void AppRequest_LoginMessage::set_password_hash(const char* value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.LoginMessage.password_hash)
}
inline void AppRequest_LoginMessage::set_password_hash(const char* value, size_t size) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.LoginMessage.password_hash)
}
inline ::std::string* AppRequest_LoginMessage::mutable_password_hash() {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.LoginMessage.password_hash)
  return password_hash_;
}
inline ::std::string* AppRequest_LoginMessage::release_password_hash() {
  clear_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_hash_;
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_LoginMessage::set_allocated_password_hash(::std::string* password_hash) {
  if (password_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_hash_;
  }
  if (password_hash) {
    set_has_password_hash();
    password_hash_ = password_hash;
  } else {
    clear_has_password_hash();
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.LoginMessage.password_hash)
}

// -------------------------------------------------------------------

// AppRequest_CreateEvent

// required string title = 1;
inline bool AppRequest_CreateEvent::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_CreateEvent::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_CreateEvent::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_CreateEvent::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& AppRequest_CreateEvent::title() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.title)
  return *title_;
}
inline void AppRequest_CreateEvent::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.title)
}
inline void AppRequest_CreateEvent::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateEvent.title)
}
inline void AppRequest_CreateEvent::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateEvent.title)
}
inline ::std::string* AppRequest_CreateEvent::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateEvent.title)
  return title_;
}
inline ::std::string* AppRequest_CreateEvent::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateEvent::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateEvent.title)
}

// required string location = 2;
inline bool AppRequest_CreateEvent::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_CreateEvent::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_CreateEvent::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_CreateEvent::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& AppRequest_CreateEvent::location() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.location)
  return *location_;
}
inline void AppRequest_CreateEvent::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.location)
}
inline void AppRequest_CreateEvent::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateEvent.location)
}
inline void AppRequest_CreateEvent::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateEvent.location)
}
inline ::std::string* AppRequest_CreateEvent::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateEvent.location)
  return location_;
}
inline ::std::string* AppRequest_CreateEvent::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateEvent::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateEvent.location)
}

// required int64 time = 3;
inline bool AppRequest_CreateEvent::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest_CreateEvent::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest_CreateEvent::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest_CreateEvent::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AppRequest_CreateEvent::time() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.time)
  return time_;
}
inline void AppRequest_CreateEvent::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.time)
}

// required bool is_public = 4;
inline bool AppRequest_CreateEvent::has_is_public() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppRequest_CreateEvent::set_has_is_public() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppRequest_CreateEvent::clear_has_is_public() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppRequest_CreateEvent::clear_is_public() {
  is_public_ = false;
  clear_has_is_public();
}
inline bool AppRequest_CreateEvent::is_public() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.is_public)
  return is_public_;
}
inline void AppRequest_CreateEvent::set_is_public(bool value) {
  set_has_is_public();
  is_public_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.is_public)
}

// required bytes event_uuid1 = 5;
inline bool AppRequest_CreateEvent::has_event_uuid1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppRequest_CreateEvent::set_has_event_uuid1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppRequest_CreateEvent::clear_has_event_uuid1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppRequest_CreateEvent::clear_event_uuid1() {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_->clear();
  }
  clear_has_event_uuid1();
}
inline const ::std::string& AppRequest_CreateEvent::event_uuid1() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.event_uuid1)
  return *event_uuid1_;
}
inline void AppRequest_CreateEvent::set_event_uuid1(const ::std::string& value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.event_uuid1)
}
inline void AppRequest_CreateEvent::set_event_uuid1(const char* value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateEvent.event_uuid1)
}
inline void AppRequest_CreateEvent::set_event_uuid1(const void* value, size_t size) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateEvent.event_uuid1)
}
inline ::std::string* AppRequest_CreateEvent::mutable_event_uuid1() {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateEvent.event_uuid1)
  return event_uuid1_;
}
inline ::std::string* AppRequest_CreateEvent::release_event_uuid1() {
  clear_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid1_;
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateEvent::set_allocated_event_uuid1(::std::string* event_uuid1) {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid1_;
  }
  if (event_uuid1) {
    set_has_event_uuid1();
    event_uuid1_ = event_uuid1;
  } else {
    clear_has_event_uuid1();
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateEvent.event_uuid1)
}

// required string description = 6;
inline bool AppRequest_CreateEvent::has_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppRequest_CreateEvent::set_has_description() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppRequest_CreateEvent::clear_has_description() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppRequest_CreateEvent::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AppRequest_CreateEvent::description() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.description)
  return *description_;
}
inline void AppRequest_CreateEvent::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.description)
}
inline void AppRequest_CreateEvent::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.CreateEvent.description)
}
inline void AppRequest_CreateEvent::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.CreateEvent.description)
}
inline ::std::string* AppRequest_CreateEvent::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.CreateEvent.description)
  return description_;
}
inline ::std::string* AppRequest_CreateEvent::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_CreateEvent::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.CreateEvent.description)
}

// repeated int64 invited_users = 7;
inline int AppRequest_CreateEvent::invited_users_size() const {
  return invited_users_.size();
}
inline void AppRequest_CreateEvent::clear_invited_users() {
  invited_users_.Clear();
}
inline ::google::protobuf::int64 AppRequest_CreateEvent::invited_users(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.CreateEvent.invited_users)
  return invited_users_.Get(index);
}
inline void AppRequest_CreateEvent::set_invited_users(int index, ::google::protobuf::int64 value) {
  invited_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.CreateEvent.invited_users)
}
inline void AppRequest_CreateEvent::add_invited_users(::google::protobuf::int64 value) {
  invited_users_.Add(value);
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.CreateEvent.invited_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AppRequest_CreateEvent::invited_users() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.CreateEvent.invited_users)
  return invited_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AppRequest_CreateEvent::mutable_invited_users() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.CreateEvent.invited_users)
  return &invited_users_;
}

// -------------------------------------------------------------------

// AppRequest_EventAccept

// required bytes event_uuid1 = 1;
inline bool AppRequest_EventAccept::has_event_uuid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_EventAccept::set_has_event_uuid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_EventAccept::clear_has_event_uuid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_EventAccept::clear_event_uuid1() {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_->clear();
  }
  clear_has_event_uuid1();
}
inline const ::std::string& AppRequest_EventAccept::event_uuid1() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.EventAccept.event_uuid1)
  return *event_uuid1_;
}
inline void AppRequest_EventAccept::set_event_uuid1(const ::std::string& value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.EventAccept.event_uuid1)
}
inline void AppRequest_EventAccept::set_event_uuid1(const char* value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.EventAccept.event_uuid1)
}
inline void AppRequest_EventAccept::set_event_uuid1(const void* value, size_t size) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.EventAccept.event_uuid1)
}
inline ::std::string* AppRequest_EventAccept::mutable_event_uuid1() {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.EventAccept.event_uuid1)
  return event_uuid1_;
}
inline ::std::string* AppRequest_EventAccept::release_event_uuid1() {
  clear_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid1_;
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_EventAccept::set_allocated_event_uuid1(::std::string* event_uuid1) {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid1_;
  }
  if (event_uuid1) {
    set_has_event_uuid1();
    event_uuid1_ = event_uuid1;
  } else {
    clear_has_event_uuid1();
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.EventAccept.event_uuid1)
}

// -------------------------------------------------------------------

// AppRequest_EventReject

// required bytes event_uuid1 = 1;
inline bool AppRequest_EventReject::has_event_uuid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_EventReject::set_has_event_uuid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_EventReject::clear_has_event_uuid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_EventReject::clear_event_uuid1() {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_->clear();
  }
  clear_has_event_uuid1();
}
inline const ::std::string& AppRequest_EventReject::event_uuid1() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.EventReject.event_uuid1)
  return *event_uuid1_;
}
inline void AppRequest_EventReject::set_event_uuid1(const ::std::string& value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.EventReject.event_uuid1)
}
inline void AppRequest_EventReject::set_event_uuid1(const char* value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.EventReject.event_uuid1)
}
inline void AppRequest_EventReject::set_event_uuid1(const void* value, size_t size) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.EventReject.event_uuid1)
}
inline ::std::string* AppRequest_EventReject::mutable_event_uuid1() {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.EventReject.event_uuid1)
  return event_uuid1_;
}
inline ::std::string* AppRequest_EventReject::release_event_uuid1() {
  clear_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid1_;
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_EventReject::set_allocated_event_uuid1(::std::string* event_uuid1) {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid1_;
  }
  if (event_uuid1) {
    set_has_event_uuid1();
    event_uuid1_ = event_uuid1;
  } else {
    clear_has_event_uuid1();
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.EventReject.event_uuid1)
}

// -------------------------------------------------------------------

// AppRequest_EventInvite

// required bytes event_uuid1 = 1;
inline bool AppRequest_EventInvite::has_event_uuid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_EventInvite::set_has_event_uuid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_EventInvite::clear_has_event_uuid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_EventInvite::clear_event_uuid1() {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_->clear();
  }
  clear_has_event_uuid1();
}
inline const ::std::string& AppRequest_EventInvite::event_uuid1() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.EventInvite.event_uuid1)
  return *event_uuid1_;
}
inline void AppRequest_EventInvite::set_event_uuid1(const ::std::string& value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.EventInvite.event_uuid1)
}
inline void AppRequest_EventInvite::set_event_uuid1(const char* value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.EventInvite.event_uuid1)
}
inline void AppRequest_EventInvite::set_event_uuid1(const void* value, size_t size) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.EventInvite.event_uuid1)
}
inline ::std::string* AppRequest_EventInvite::mutable_event_uuid1() {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.EventInvite.event_uuid1)
  return event_uuid1_;
}
inline ::std::string* AppRequest_EventInvite::release_event_uuid1() {
  clear_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid1_;
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_EventInvite::set_allocated_event_uuid1(::std::string* event_uuid1) {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid1_;
  }
  if (event_uuid1) {
    set_has_event_uuid1();
    event_uuid1_ = event_uuid1;
  } else {
    clear_has_event_uuid1();
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.EventInvite.event_uuid1)
}

// repeated int64 invited_users = 2;
inline int AppRequest_EventInvite::invited_users_size() const {
  return invited_users_.size();
}
inline void AppRequest_EventInvite::clear_invited_users() {
  invited_users_.Clear();
}
inline ::google::protobuf::int64 AppRequest_EventInvite::invited_users(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.EventInvite.invited_users)
  return invited_users_.Get(index);
}
inline void AppRequest_EventInvite::set_invited_users(int index, ::google::protobuf::int64 value) {
  invited_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.EventInvite.invited_users)
}
inline void AppRequest_EventInvite::add_invited_users(::google::protobuf::int64 value) {
  invited_users_.Add(value);
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.EventInvite.invited_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AppRequest_EventInvite::invited_users() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.EventInvite.invited_users)
  return invited_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AppRequest_EventInvite::mutable_invited_users() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.EventInvite.invited_users)
  return &invited_users_;
}

// -------------------------------------------------------------------

// AppRequest_PollInvitedEvents

// optional int64 offset = 1;
inline bool AppRequest_PollInvitedEvents::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_PollInvitedEvents::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_PollInvitedEvents::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_PollInvitedEvents::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::int64 AppRequest_PollInvitedEvents::offset() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PollInvitedEvents.offset)
  return offset_;
}
inline void AppRequest_PollInvitedEvents::set_offset(::google::protobuf::int64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.PollInvitedEvents.offset)
}

// optional int64 amount = 2;
inline bool AppRequest_PollInvitedEvents::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_PollInvitedEvents::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_PollInvitedEvents::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_PollInvitedEvents::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
  clear_has_amount();
}
inline ::google::protobuf::int64 AppRequest_PollInvitedEvents::amount() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PollInvitedEvents.amount)
  return amount_;
}
inline void AppRequest_PollInvitedEvents::set_amount(::google::protobuf::int64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.PollInvitedEvents.amount)
}

// -------------------------------------------------------------------

// AppRequest_PollAcceptedEvents

// optional int64 offset = 1;
inline bool AppRequest_PollAcceptedEvents::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_PollAcceptedEvents::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_PollAcceptedEvents::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_PollAcceptedEvents::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::int64 AppRequest_PollAcceptedEvents::offset() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PollAcceptedEvents.offset)
  return offset_;
}
inline void AppRequest_PollAcceptedEvents::set_offset(::google::protobuf::int64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.PollAcceptedEvents.offset)
}

// optional int64 amount = 2;
inline bool AppRequest_PollAcceptedEvents::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_PollAcceptedEvents::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_PollAcceptedEvents::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_PollAcceptedEvents::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
  clear_has_amount();
}
inline ::google::protobuf::int64 AppRequest_PollAcceptedEvents::amount() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PollAcceptedEvents.amount)
  return amount_;
}
inline void AppRequest_PollAcceptedEvents::set_amount(::google::protobuf::int64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.PollAcceptedEvents.amount)
}

// -------------------------------------------------------------------

// AppRequest_FriendRequest

// required int64 destination_user = 1;
inline bool AppRequest_FriendRequest::has_destination_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_FriendRequest::set_has_destination_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_FriendRequest::clear_has_destination_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_FriendRequest::clear_destination_user() {
  destination_user_ = GOOGLE_LONGLONG(0);
  clear_has_destination_user();
}
inline ::google::protobuf::int64 AppRequest_FriendRequest::destination_user() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.FriendRequest.destination_user)
  return destination_user_;
}
inline void AppRequest_FriendRequest::set_destination_user(::google::protobuf::int64 value) {
  set_has_destination_user();
  destination_user_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.FriendRequest.destination_user)
}

// required string message = 2;
inline bool AppRequest_FriendRequest::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_FriendRequest::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_FriendRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_FriendRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& AppRequest_FriendRequest::message() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.FriendRequest.message)
  return *message_;
}
inline void AppRequest_FriendRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.FriendRequest.message)
}
inline void AppRequest_FriendRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.FriendRequest.message)
}
inline void AppRequest_FriendRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.FriendRequest.message)
}
inline ::std::string* AppRequest_FriendRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.FriendRequest.message)
  return message_;
}
inline ::std::string* AppRequest_FriendRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_FriendRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.FriendRequest.message)
}

// -------------------------------------------------------------------

// AppRequest_AcceptFriendRequest

// required int64 requesting_user_id = 1;
inline bool AppRequest_AcceptFriendRequest::has_requesting_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_AcceptFriendRequest::set_has_requesting_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_AcceptFriendRequest::clear_has_requesting_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_AcceptFriendRequest::clear_requesting_user_id() {
  requesting_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_requesting_user_id();
}
inline ::google::protobuf::int64 AppRequest_AcceptFriendRequest::requesting_user_id() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.AcceptFriendRequest.requesting_user_id)
  return requesting_user_id_;
}
inline void AppRequest_AcceptFriendRequest::set_requesting_user_id(::google::protobuf::int64 value) {
  set_has_requesting_user_id();
  requesting_user_id_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.AcceptFriendRequest.requesting_user_id)
}

// -------------------------------------------------------------------

// AppRequest_AlbumPhoto

// required bytes photo = 1;
inline bool AppRequest_AlbumPhoto::has_photo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_AlbumPhoto::set_has_photo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_AlbumPhoto::clear_has_photo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_AlbumPhoto::clear_photo() {
  if (photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    photo_->clear();
  }
  clear_has_photo();
}
inline const ::std::string& AppRequest_AlbumPhoto::photo() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.AlbumPhoto.photo)
  return *photo_;
}
inline void AppRequest_AlbumPhoto::set_photo(const ::std::string& value) {
  set_has_photo();
  if (photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    photo_ = new ::std::string;
  }
  photo_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.AlbumPhoto.photo)
}
inline void AppRequest_AlbumPhoto::set_photo(const char* value) {
  set_has_photo();
  if (photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    photo_ = new ::std::string;
  }
  photo_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.AlbumPhoto.photo)
}
inline void AppRequest_AlbumPhoto::set_photo(const void* value, size_t size) {
  set_has_photo();
  if (photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    photo_ = new ::std::string;
  }
  photo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.AlbumPhoto.photo)
}
inline ::std::string* AppRequest_AlbumPhoto::mutable_photo() {
  set_has_photo();
  if (photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    photo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.AlbumPhoto.photo)
  return photo_;
}
inline ::std::string* AppRequest_AlbumPhoto::release_photo() {
  clear_has_photo();
  if (photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = photo_;
    photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_AlbumPhoto::set_allocated_photo(::std::string* photo) {
  if (photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete photo_;
  }
  if (photo) {
    set_has_photo();
    photo_ = photo;
  } else {
    clear_has_photo();
    photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.AlbumPhoto.photo)
}

// optional string description = 2;
inline bool AppRequest_AlbumPhoto::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_AlbumPhoto::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_AlbumPhoto::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_AlbumPhoto::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AppRequest_AlbumPhoto::description() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.AlbumPhoto.description)
  return *description_;
}
inline void AppRequest_AlbumPhoto::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.AlbumPhoto.description)
}
inline void AppRequest_AlbumPhoto::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.AlbumPhoto.description)
}
inline void AppRequest_AlbumPhoto::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.AlbumPhoto.description)
}
inline ::std::string* AppRequest_AlbumPhoto::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.AlbumPhoto.description)
  return description_;
}
inline ::std::string* AppRequest_AlbumPhoto::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_AlbumPhoto::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.AlbumPhoto.description)
}

// -------------------------------------------------------------------

// AppRequest_PhotoAlbum

// repeated .netmsg.AppRequest.AlbumPhoto photos = 1;
inline int AppRequest_PhotoAlbum::photos_size() const {
  return photos_.size();
}
inline void AppRequest_PhotoAlbum::clear_photos() {
  photos_.Clear();
}
inline const ::netmsg::AppRequest_AlbumPhoto& AppRequest_PhotoAlbum::photos(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PhotoAlbum.photos)
  return photos_.Get(index);
}
inline ::netmsg::AppRequest_AlbumPhoto* AppRequest_PhotoAlbum::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.PhotoAlbum.photos)
  return photos_.Mutable(index);
}
inline ::netmsg::AppRequest_AlbumPhoto* AppRequest_PhotoAlbum::add_photos() {
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.PhotoAlbum.photos)
  return photos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_AlbumPhoto >&
AppRequest_PhotoAlbum::photos() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.PhotoAlbum.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_AlbumPhoto >*
AppRequest_PhotoAlbum::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.PhotoAlbum.photos)
  return &photos_;
}

// optional string AlbumDescription = 2;
inline bool AppRequest_PhotoAlbum::has_albumdescription() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_PhotoAlbum::set_has_albumdescription() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_PhotoAlbum::clear_has_albumdescription() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_PhotoAlbum::clear_albumdescription() {
  if (albumdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    albumdescription_->clear();
  }
  clear_has_albumdescription();
}
inline const ::std::string& AppRequest_PhotoAlbum::albumdescription() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
  return *albumdescription_;
}
inline void AppRequest_PhotoAlbum::set_albumdescription(const ::std::string& value) {
  set_has_albumdescription();
  if (albumdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    albumdescription_ = new ::std::string;
  }
  albumdescription_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
}
inline void AppRequest_PhotoAlbum::set_albumdescription(const char* value) {
  set_has_albumdescription();
  if (albumdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    albumdescription_ = new ::std::string;
  }
  albumdescription_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
}
inline void AppRequest_PhotoAlbum::set_albumdescription(const char* value, size_t size) {
  set_has_albumdescription();
  if (albumdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    albumdescription_ = new ::std::string;
  }
  albumdescription_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
}
inline ::std::string* AppRequest_PhotoAlbum::mutable_albumdescription() {
  set_has_albumdescription();
  if (albumdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    albumdescription_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
  return albumdescription_;
}
inline ::std::string* AppRequest_PhotoAlbum::release_albumdescription() {
  clear_has_albumdescription();
  if (albumdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = albumdescription_;
    albumdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_PhotoAlbum::set_allocated_albumdescription(::std::string* albumdescription) {
  if (albumdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete albumdescription_;
  }
  if (albumdescription) {
    set_has_albumdescription();
    albumdescription_ = albumdescription;
  } else {
    clear_has_albumdescription();
    albumdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.PhotoAlbum.AlbumDescription)
}

// -------------------------------------------------------------------

// AppRequest_UpdateProfile

// optional string email = 1;
inline bool AppRequest_UpdateProfile::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest_UpdateProfile::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest_UpdateProfile::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& AppRequest_UpdateProfile::email() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.email)
  return *email_;
}
inline void AppRequest_UpdateProfile::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.email)
}
inline void AppRequest_UpdateProfile::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.email)
}
inline void AppRequest_UpdateProfile::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.email)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.email)
  return email_;
}
inline ::std::string* AppRequest_UpdateProfile::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.email)
}

// optional string description = 2;
inline bool AppRequest_UpdateProfile::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest_UpdateProfile::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest_UpdateProfile::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AppRequest_UpdateProfile::description() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.description)
  return *description_;
}
inline void AppRequest_UpdateProfile::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.description)
}
inline void AppRequest_UpdateProfile::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.description)
}
inline void AppRequest_UpdateProfile::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.description)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.description)
  return description_;
}
inline ::std::string* AppRequest_UpdateProfile::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.description)
}

// optional string location = 3;
inline bool AppRequest_UpdateProfile::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest_UpdateProfile::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest_UpdateProfile::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& AppRequest_UpdateProfile::location() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.location)
  return *location_;
}
inline void AppRequest_UpdateProfile::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.location)
}
inline void AppRequest_UpdateProfile::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.location)
}
inline void AppRequest_UpdateProfile::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.location)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.location)
  return location_;
}
inline ::std::string* AppRequest_UpdateProfile::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.location)
}

// optional string nickname = 4;
inline bool AppRequest_UpdateProfile::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppRequest_UpdateProfile::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppRequest_UpdateProfile::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& AppRequest_UpdateProfile::nickname() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.nickname)
  return *nickname_;
}
inline void AppRequest_UpdateProfile::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.nickname)
}
inline void AppRequest_UpdateProfile::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.nickname)
}
inline void AppRequest_UpdateProfile::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.nickname)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.nickname)
  return nickname_;
}
inline ::std::string* AppRequest_UpdateProfile::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.nickname)
}

// optional string password = 5;
inline bool AppRequest_UpdateProfile::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppRequest_UpdateProfile::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppRequest_UpdateProfile::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& AppRequest_UpdateProfile::password() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.password)
  return *password_;
}
inline void AppRequest_UpdateProfile::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.password)
}
inline void AppRequest_UpdateProfile::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.password)
}
inline void AppRequest_UpdateProfile::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.password)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.password)
  return password_;
}
inline ::std::string* AppRequest_UpdateProfile::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.password)
}

// optional bytes profile_photo = 6;
inline bool AppRequest_UpdateProfile::has_profile_photo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppRequest_UpdateProfile::set_has_profile_photo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppRequest_UpdateProfile::clear_has_profile_photo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppRequest_UpdateProfile::clear_profile_photo() {
  if (profile_photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_->clear();
  }
  clear_has_profile_photo();
}
inline const ::std::string& AppRequest_UpdateProfile::profile_photo() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.profile_photo)
  return *profile_photo_;
}
inline void AppRequest_UpdateProfile::set_profile_photo(const ::std::string& value) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.UpdateProfile.profile_photo)
}
inline void AppRequest_UpdateProfile::set_profile_photo(const char* value) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppRequest.UpdateProfile.profile_photo)
}
inline void AppRequest_UpdateProfile::set_profile_photo(const void* value, size_t size) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppRequest.UpdateProfile.profile_photo)
}
inline ::std::string* AppRequest_UpdateProfile::mutable_profile_photo() {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.profile_photo)
  return profile_photo_;
}
inline ::std::string* AppRequest_UpdateProfile::release_profile_photo() {
  clear_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_photo_;
    profile_photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppRequest_UpdateProfile::set_allocated_profile_photo(::std::string* profile_photo) {
  if (profile_photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_photo_;
  }
  if (profile_photo) {
    set_has_profile_photo();
    profile_photo_ = profile_photo;
  } else {
    clear_has_profile_photo();
    profile_photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.UpdateProfile.profile_photo)
}

// repeated .netmsg.AppRequest.PhotoAlbum new_albums = 7;
inline int AppRequest_UpdateProfile::new_albums_size() const {
  return new_albums_.size();
}
inline void AppRequest_UpdateProfile::clear_new_albums() {
  new_albums_.Clear();
}
inline const ::netmsg::AppRequest_PhotoAlbum& AppRequest_UpdateProfile::new_albums(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.UpdateProfile.new_albums)
  return new_albums_.Get(index);
}
inline ::netmsg::AppRequest_PhotoAlbum* AppRequest_UpdateProfile::mutable_new_albums(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.UpdateProfile.new_albums)
  return new_albums_.Mutable(index);
}
inline ::netmsg::AppRequest_PhotoAlbum* AppRequest_UpdateProfile::add_new_albums() {
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.UpdateProfile.new_albums)
  return new_albums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_PhotoAlbum >&
AppRequest_UpdateProfile::new_albums() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.UpdateProfile.new_albums)
  return new_albums_;
}
inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppRequest_PhotoAlbum >*
AppRequest_UpdateProfile::mutable_new_albums() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.UpdateProfile.new_albums)
  return &new_albums_;
}

// -------------------------------------------------------------------

// AppRequest

// required int64 phone_id = 1;
inline bool AppRequest::has_phone_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppRequest::set_has_phone_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppRequest::clear_has_phone_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppRequest::clear_phone_id() {
  phone_id_ = GOOGLE_LONGLONG(0);
  clear_has_phone_id();
}
inline ::google::protobuf::int64 AppRequest::phone_id() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.phone_id)
  return phone_id_;
}
inline void AppRequest::set_phone_id(::google::protobuf::int64 value) {
  set_has_phone_id();
  phone_id_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.phone_id)
}

// required .netmsg.AppRequest.MessageType msg_type = 2;
inline bool AppRequest::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppRequest::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppRequest::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppRequest::clear_msg_type() {
  msg_type_ = 1;
  clear_has_msg_type();
}
inline ::netmsg::AppRequest_MessageType AppRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.msg_type)
  return static_cast< ::netmsg::AppRequest_MessageType >(msg_type_);
}
inline void AppRequest::set_msg_type(::netmsg::AppRequest_MessageType value) {
  assert(::netmsg::AppRequest_MessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.msg_type)
}

// optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
inline bool AppRequest::has_reg_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppRequest::set_has_reg_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppRequest::clear_has_reg_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppRequest::clear_reg_msg() {
  if (reg_msg_ != NULL) reg_msg_->::netmsg::AppRequest_RegisterMessage::Clear();
  clear_has_reg_msg();
}
inline const ::netmsg::AppRequest_RegisterMessage& AppRequest::reg_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.reg_msg)
  return reg_msg_ != NULL ? *reg_msg_ : *default_instance_->reg_msg_;
}
inline ::netmsg::AppRequest_RegisterMessage* AppRequest::mutable_reg_msg() {
  set_has_reg_msg();
  if (reg_msg_ == NULL) reg_msg_ = new ::netmsg::AppRequest_RegisterMessage;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.reg_msg)
  return reg_msg_;
}
inline ::netmsg::AppRequest_RegisterMessage* AppRequest::release_reg_msg() {
  clear_has_reg_msg();
  ::netmsg::AppRequest_RegisterMessage* temp = reg_msg_;
  reg_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_reg_msg(::netmsg::AppRequest_RegisterMessage* reg_msg) {
  delete reg_msg_;
  reg_msg_ = reg_msg;
  if (reg_msg) {
    set_has_reg_msg();
  } else {
    clear_has_reg_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.reg_msg)
}

// optional .netmsg.AppRequest.LoginMessage login_msg = 4;
inline bool AppRequest::has_login_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppRequest::set_has_login_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppRequest::clear_has_login_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppRequest::clear_login_msg() {
  if (login_msg_ != NULL) login_msg_->::netmsg::AppRequest_LoginMessage::Clear();
  clear_has_login_msg();
}
inline const ::netmsg::AppRequest_LoginMessage& AppRequest::login_msg() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.login_msg)
  return login_msg_ != NULL ? *login_msg_ : *default_instance_->login_msg_;
}
inline ::netmsg::AppRequest_LoginMessage* AppRequest::mutable_login_msg() {
  set_has_login_msg();
  if (login_msg_ == NULL) login_msg_ = new ::netmsg::AppRequest_LoginMessage;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.login_msg)
  return login_msg_;
}
inline ::netmsg::AppRequest_LoginMessage* AppRequest::release_login_msg() {
  clear_has_login_msg();
  ::netmsg::AppRequest_LoginMessage* temp = login_msg_;
  login_msg_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_login_msg(::netmsg::AppRequest_LoginMessage* login_msg) {
  delete login_msg_;
  login_msg_ = login_msg;
  if (login_msg) {
    set_has_login_msg();
  } else {
    clear_has_login_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.login_msg)
}

// optional .netmsg.AppRequest.CreateEvent create_event = 5;
inline bool AppRequest::has_create_event() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppRequest::set_has_create_event() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppRequest::clear_has_create_event() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppRequest::clear_create_event() {
  if (create_event_ != NULL) create_event_->::netmsg::AppRequest_CreateEvent::Clear();
  clear_has_create_event();
}
inline const ::netmsg::AppRequest_CreateEvent& AppRequest::create_event() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.create_event)
  return create_event_ != NULL ? *create_event_ : *default_instance_->create_event_;
}
inline ::netmsg::AppRequest_CreateEvent* AppRequest::mutable_create_event() {
  set_has_create_event();
  if (create_event_ == NULL) create_event_ = new ::netmsg::AppRequest_CreateEvent;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.create_event)
  return create_event_;
}
inline ::netmsg::AppRequest_CreateEvent* AppRequest::release_create_event() {
  clear_has_create_event();
  ::netmsg::AppRequest_CreateEvent* temp = create_event_;
  create_event_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_create_event(::netmsg::AppRequest_CreateEvent* create_event) {
  delete create_event_;
  create_event_ = create_event;
  if (create_event) {
    set_has_create_event();
  } else {
    clear_has_create_event();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.create_event)
}

// optional .netmsg.AppRequest.EventAccept accept_event = 6;
inline bool AppRequest::has_accept_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppRequest::set_has_accept_event() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppRequest::clear_has_accept_event() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppRequest::clear_accept_event() {
  if (accept_event_ != NULL) accept_event_->::netmsg::AppRequest_EventAccept::Clear();
  clear_has_accept_event();
}
inline const ::netmsg::AppRequest_EventAccept& AppRequest::accept_event() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.accept_event)
  return accept_event_ != NULL ? *accept_event_ : *default_instance_->accept_event_;
}
inline ::netmsg::AppRequest_EventAccept* AppRequest::mutable_accept_event() {
  set_has_accept_event();
  if (accept_event_ == NULL) accept_event_ = new ::netmsg::AppRequest_EventAccept;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.accept_event)
  return accept_event_;
}
inline ::netmsg::AppRequest_EventAccept* AppRequest::release_accept_event() {
  clear_has_accept_event();
  ::netmsg::AppRequest_EventAccept* temp = accept_event_;
  accept_event_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_accept_event(::netmsg::AppRequest_EventAccept* accept_event) {
  delete accept_event_;
  accept_event_ = accept_event;
  if (accept_event) {
    set_has_accept_event();
  } else {
    clear_has_accept_event();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.accept_event)
}

// optional .netmsg.AppRequest.EventReject reject_event = 7;
inline bool AppRequest::has_reject_event() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppRequest::set_has_reject_event() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppRequest::clear_has_reject_event() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppRequest::clear_reject_event() {
  if (reject_event_ != NULL) reject_event_->::netmsg::AppRequest_EventReject::Clear();
  clear_has_reject_event();
}
inline const ::netmsg::AppRequest_EventReject& AppRequest::reject_event() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.reject_event)
  return reject_event_ != NULL ? *reject_event_ : *default_instance_->reject_event_;
}
inline ::netmsg::AppRequest_EventReject* AppRequest::mutable_reject_event() {
  set_has_reject_event();
  if (reject_event_ == NULL) reject_event_ = new ::netmsg::AppRequest_EventReject;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.reject_event)
  return reject_event_;
}
inline ::netmsg::AppRequest_EventReject* AppRequest::release_reject_event() {
  clear_has_reject_event();
  ::netmsg::AppRequest_EventReject* temp = reject_event_;
  reject_event_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_reject_event(::netmsg::AppRequest_EventReject* reject_event) {
  delete reject_event_;
  reject_event_ = reject_event;
  if (reject_event) {
    set_has_reject_event();
  } else {
    clear_has_reject_event();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.reject_event)
}

// optional .netmsg.AppRequest.EventInvite invite_event = 8;
inline bool AppRequest::has_invite_event() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppRequest::set_has_invite_event() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppRequest::clear_has_invite_event() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppRequest::clear_invite_event() {
  if (invite_event_ != NULL) invite_event_->::netmsg::AppRequest_EventInvite::Clear();
  clear_has_invite_event();
}
inline const ::netmsg::AppRequest_EventInvite& AppRequest::invite_event() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.invite_event)
  return invite_event_ != NULL ? *invite_event_ : *default_instance_->invite_event_;
}
inline ::netmsg::AppRequest_EventInvite* AppRequest::mutable_invite_event() {
  set_has_invite_event();
  if (invite_event_ == NULL) invite_event_ = new ::netmsg::AppRequest_EventInvite;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.invite_event)
  return invite_event_;
}
inline ::netmsg::AppRequest_EventInvite* AppRequest::release_invite_event() {
  clear_has_invite_event();
  ::netmsg::AppRequest_EventInvite* temp = invite_event_;
  invite_event_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_invite_event(::netmsg::AppRequest_EventInvite* invite_event) {
  delete invite_event_;
  invite_event_ = invite_event;
  if (invite_event) {
    set_has_invite_event();
  } else {
    clear_has_invite_event();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.invite_event)
}

// optional .netmsg.AppRequest.PollInvitedEvents poll_invited = 9;
inline bool AppRequest::has_poll_invited() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppRequest::set_has_poll_invited() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppRequest::clear_has_poll_invited() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppRequest::clear_poll_invited() {
  if (poll_invited_ != NULL) poll_invited_->::netmsg::AppRequest_PollInvitedEvents::Clear();
  clear_has_poll_invited();
}
inline const ::netmsg::AppRequest_PollInvitedEvents& AppRequest::poll_invited() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.poll_invited)
  return poll_invited_ != NULL ? *poll_invited_ : *default_instance_->poll_invited_;
}
inline ::netmsg::AppRequest_PollInvitedEvents* AppRequest::mutable_poll_invited() {
  set_has_poll_invited();
  if (poll_invited_ == NULL) poll_invited_ = new ::netmsg::AppRequest_PollInvitedEvents;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.poll_invited)
  return poll_invited_;
}
inline ::netmsg::AppRequest_PollInvitedEvents* AppRequest::release_poll_invited() {
  clear_has_poll_invited();
  ::netmsg::AppRequest_PollInvitedEvents* temp = poll_invited_;
  poll_invited_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_poll_invited(::netmsg::AppRequest_PollInvitedEvents* poll_invited) {
  delete poll_invited_;
  poll_invited_ = poll_invited;
  if (poll_invited) {
    set_has_poll_invited();
  } else {
    clear_has_poll_invited();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.poll_invited)
}

// optional .netmsg.AppRequest.PollAcceptedEvents poll_accepted = 10;
inline bool AppRequest::has_poll_accepted() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppRequest::set_has_poll_accepted() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppRequest::clear_has_poll_accepted() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppRequest::clear_poll_accepted() {
  if (poll_accepted_ != NULL) poll_accepted_->::netmsg::AppRequest_PollAcceptedEvents::Clear();
  clear_has_poll_accepted();
}
inline const ::netmsg::AppRequest_PollAcceptedEvents& AppRequest::poll_accepted() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.poll_accepted)
  return poll_accepted_ != NULL ? *poll_accepted_ : *default_instance_->poll_accepted_;
}
inline ::netmsg::AppRequest_PollAcceptedEvents* AppRequest::mutable_poll_accepted() {
  set_has_poll_accepted();
  if (poll_accepted_ == NULL) poll_accepted_ = new ::netmsg::AppRequest_PollAcceptedEvents;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.poll_accepted)
  return poll_accepted_;
}
inline ::netmsg::AppRequest_PollAcceptedEvents* AppRequest::release_poll_accepted() {
  clear_has_poll_accepted();
  ::netmsg::AppRequest_PollAcceptedEvents* temp = poll_accepted_;
  poll_accepted_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_poll_accepted(::netmsg::AppRequest_PollAcceptedEvents* poll_accepted) {
  delete poll_accepted_;
  poll_accepted_ = poll_accepted;
  if (poll_accepted) {
    set_has_poll_accepted();
  } else {
    clear_has_poll_accepted();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.poll_accepted)
}

// optional .netmsg.AppRequest.FriendRequest friend_request = 11;
inline bool AppRequest::has_friend_request() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppRequest::set_has_friend_request() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppRequest::clear_has_friend_request() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppRequest::clear_friend_request() {
  if (friend_request_ != NULL) friend_request_->::netmsg::AppRequest_FriendRequest::Clear();
  clear_has_friend_request();
}
inline const ::netmsg::AppRequest_FriendRequest& AppRequest::friend_request() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.friend_request)
  return friend_request_ != NULL ? *friend_request_ : *default_instance_->friend_request_;
}
inline ::netmsg::AppRequest_FriendRequest* AppRequest::mutable_friend_request() {
  set_has_friend_request();
  if (friend_request_ == NULL) friend_request_ = new ::netmsg::AppRequest_FriendRequest;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.friend_request)
  return friend_request_;
}
inline ::netmsg::AppRequest_FriendRequest* AppRequest::release_friend_request() {
  clear_has_friend_request();
  ::netmsg::AppRequest_FriendRequest* temp = friend_request_;
  friend_request_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_friend_request(::netmsg::AppRequest_FriendRequest* friend_request) {
  delete friend_request_;
  friend_request_ = friend_request;
  if (friend_request) {
    set_has_friend_request();
  } else {
    clear_has_friend_request();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.friend_request)
}

// optional .netmsg.AppRequest.AcceptFriendRequest accept_friend_request = 12;
inline bool AppRequest::has_accept_friend_request() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppRequest::set_has_accept_friend_request() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppRequest::clear_has_accept_friend_request() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppRequest::clear_accept_friend_request() {
  if (accept_friend_request_ != NULL) accept_friend_request_->::netmsg::AppRequest_AcceptFriendRequest::Clear();
  clear_has_accept_friend_request();
}
inline const ::netmsg::AppRequest_AcceptFriendRequest& AppRequest::accept_friend_request() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.accept_friend_request)
  return accept_friend_request_ != NULL ? *accept_friend_request_ : *default_instance_->accept_friend_request_;
}
inline ::netmsg::AppRequest_AcceptFriendRequest* AppRequest::mutable_accept_friend_request() {
  set_has_accept_friend_request();
  if (accept_friend_request_ == NULL) accept_friend_request_ = new ::netmsg::AppRequest_AcceptFriendRequest;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.accept_friend_request)
  return accept_friend_request_;
}
inline ::netmsg::AppRequest_AcceptFriendRequest* AppRequest::release_accept_friend_request() {
  clear_has_accept_friend_request();
  ::netmsg::AppRequest_AcceptFriendRequest* temp = accept_friend_request_;
  accept_friend_request_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_accept_friend_request(::netmsg::AppRequest_AcceptFriendRequest* accept_friend_request) {
  delete accept_friend_request_;
  accept_friend_request_ = accept_friend_request;
  if (accept_friend_request) {
    set_has_accept_friend_request();
  } else {
    clear_has_accept_friend_request();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.accept_friend_request)
}

// optional .netmsg.AppRequest.UpdateProfile update_profile = 13;
inline bool AppRequest::has_update_profile() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppRequest::set_has_update_profile() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppRequest::clear_has_update_profile() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppRequest::clear_update_profile() {
  if (update_profile_ != NULL) update_profile_->::netmsg::AppRequest_UpdateProfile::Clear();
  clear_has_update_profile();
}
inline const ::netmsg::AppRequest_UpdateProfile& AppRequest::update_profile() const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.update_profile)
  return update_profile_ != NULL ? *update_profile_ : *default_instance_->update_profile_;
}
inline ::netmsg::AppRequest_UpdateProfile* AppRequest::mutable_update_profile() {
  set_has_update_profile();
  if (update_profile_ == NULL) update_profile_ = new ::netmsg::AppRequest_UpdateProfile;
  // @@protoc_insertion_point(field_mutable:netmsg.AppRequest.update_profile)
  return update_profile_;
}
inline ::netmsg::AppRequest_UpdateProfile* AppRequest::release_update_profile() {
  clear_has_update_profile();
  ::netmsg::AppRequest_UpdateProfile* temp = update_profile_;
  update_profile_ = NULL;
  return temp;
}
inline void AppRequest::set_allocated_update_profile(::netmsg::AppRequest_UpdateProfile* update_profile) {
  delete update_profile_;
  update_profile_ = update_profile;
  if (update_profile) {
    set_has_update_profile();
  } else {
    clear_has_update_profile();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppRequest.update_profile)
}

// repeated int64 request_user_info = 14;
inline int AppRequest::request_user_info_size() const {
  return request_user_info_.size();
}
inline void AppRequest::clear_request_user_info() {
  request_user_info_.Clear();
}
inline ::google::protobuf::int64 AppRequest::request_user_info(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppRequest.request_user_info)
  return request_user_info_.Get(index);
}
inline void AppRequest::set_request_user_info(int index, ::google::protobuf::int64 value) {
  request_user_info_.Set(index, value);
  // @@protoc_insertion_point(field_set:netmsg.AppRequest.request_user_info)
}
inline void AppRequest::add_request_user_info(::google::protobuf::int64 value) {
  request_user_info_.Add(value);
  // @@protoc_insertion_point(field_add:netmsg.AppRequest.request_user_info)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AppRequest::request_user_info() const {
  // @@protoc_insertion_point(field_list:netmsg.AppRequest.request_user_info)
  return request_user_info_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AppRequest::mutable_request_user_info() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppRequest.request_user_info)
  return &request_user_info_;
}

// -------------------------------------------------------------------

// AppReply_EventUUID

// required bytes event_uuid1 = 1;
inline bool AppReply_EventUUID::has_event_uuid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply_EventUUID::set_has_event_uuid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply_EventUUID::clear_has_event_uuid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply_EventUUID::clear_event_uuid1() {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_->clear();
  }
  clear_has_event_uuid1();
}
inline const ::std::string& AppReply_EventUUID::event_uuid1() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventUUID.event_uuid1)
  return *event_uuid1_;
}
inline void AppReply_EventUUID::set_event_uuid1(const ::std::string& value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventUUID.event_uuid1)
}
inline void AppReply_EventUUID::set_event_uuid1(const char* value) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.EventUUID.event_uuid1)
}
inline void AppReply_EventUUID::set_event_uuid1(const void* value, size_t size) {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  event_uuid1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.EventUUID.event_uuid1)
}
inline ::std::string* AppReply_EventUUID::mutable_event_uuid1() {
  set_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.EventUUID.event_uuid1)
  return event_uuid1_;
}
inline ::std::string* AppReply_EventUUID::release_event_uuid1() {
  clear_has_event_uuid1();
  if (event_uuid1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid1_;
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_EventUUID::set_allocated_event_uuid1(::std::string* event_uuid1) {
  if (event_uuid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid1_;
  }
  if (event_uuid1) {
    set_has_event_uuid1();
    event_uuid1_ = event_uuid1;
  } else {
    clear_has_event_uuid1();
    event_uuid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.EventUUID.event_uuid1)
}

// -------------------------------------------------------------------

// AppReply_User

// required int64 phone_number = 1;
inline bool AppReply_User::has_phone_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply_User::set_has_phone_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply_User::clear_has_phone_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply_User::clear_phone_number() {
  phone_number_ = GOOGLE_LONGLONG(0);
  clear_has_phone_number();
}
inline ::google::protobuf::int64 AppReply_User::phone_number() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.phone_number)
  return phone_number_;
}
inline void AppReply_User::set_phone_number(::google::protobuf::int64 value) {
  set_has_phone_number();
  phone_number_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.phone_number)
}

// optional string nickname = 2;
inline bool AppReply_User::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppReply_User::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppReply_User::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppReply_User::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& AppReply_User::nickname() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.nickname)
  return *nickname_;
}
inline void AppReply_User::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.nickname)
}
inline void AppReply_User::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.User.nickname)
}
inline void AppReply_User::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.User.nickname)
}
inline ::std::string* AppReply_User::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.User.nickname)
  return nickname_;
}
inline ::std::string* AppReply_User::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_User::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.User.nickname)
}

// required bool is_male = 3;
inline bool AppReply_User::has_is_male() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppReply_User::set_has_is_male() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppReply_User::clear_has_is_male() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppReply_User::clear_is_male() {
  is_male_ = false;
  clear_has_is_male();
}
inline bool AppReply_User::is_male() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.is_male)
  return is_male_;
}
inline void AppReply_User::set_is_male(bool value) {
  set_has_is_male();
  is_male_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.is_male)
}

// optional bytes profile_photo = 4;
inline bool AppReply_User::has_profile_photo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppReply_User::set_has_profile_photo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppReply_User::clear_has_profile_photo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppReply_User::clear_profile_photo() {
  if (profile_photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_->clear();
  }
  clear_has_profile_photo();
}
inline const ::std::string& AppReply_User::profile_photo() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.profile_photo)
  return *profile_photo_;
}
inline void AppReply_User::set_profile_photo(const ::std::string& value) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.profile_photo)
}
inline void AppReply_User::set_profile_photo(const char* value) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.User.profile_photo)
}
inline void AppReply_User::set_profile_photo(const void* value, size_t size) {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  profile_photo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.User.profile_photo)
}
inline ::std::string* AppReply_User::mutable_profile_photo() {
  set_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profile_photo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.User.profile_photo)
  return profile_photo_;
}
inline ::std::string* AppReply_User::release_profile_photo() {
  clear_has_profile_photo();
  if (profile_photo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profile_photo_;
    profile_photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_User::set_allocated_profile_photo(::std::string* profile_photo) {
  if (profile_photo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profile_photo_;
  }
  if (profile_photo) {
    set_has_profile_photo();
    profile_photo_ = profile_photo;
  } else {
    clear_has_profile_photo();
    profile_photo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.User.profile_photo)
}

// optional string email = 5;
inline bool AppReply_User::has_email() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppReply_User::set_has_email() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppReply_User::clear_has_email() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppReply_User::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& AppReply_User::email() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.email)
  return *email_;
}
inline void AppReply_User::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.email)
}
inline void AppReply_User::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.User.email)
}
inline void AppReply_User::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.User.email)
}
inline ::std::string* AppReply_User::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.User.email)
  return email_;
}
inline ::std::string* AppReply_User::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_User::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.User.email)
}

// optional string description = 6;
inline bool AppReply_User::has_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppReply_User::set_has_description() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppReply_User::clear_has_description() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppReply_User::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AppReply_User::description() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.description)
  return *description_;
}
inline void AppReply_User::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.description)
}
inline void AppReply_User::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.User.description)
}
inline void AppReply_User::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.User.description)
}
inline ::std::string* AppReply_User::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.User.description)
  return description_;
}
inline ::std::string* AppReply_User::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_User::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.User.description)
}

// optional string location = 7;
inline bool AppReply_User::has_location() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppReply_User::set_has_location() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppReply_User::clear_has_location() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppReply_User::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& AppReply_User::location() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.User.location)
  return *location_;
}
inline void AppReply_User::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.User.location)
}
inline void AppReply_User::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.User.location)
}
inline void AppReply_User::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.User.location)
}
inline ::std::string* AppReply_User::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.User.location)
  return location_;
}
inline ::std::string* AppReply_User::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_User::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.User.location)
}

// -------------------------------------------------------------------

// AppReply_FriendRequest

// required int64 request_origin_user_id = 1;
inline bool AppReply_FriendRequest::has_request_origin_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply_FriendRequest::set_has_request_origin_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply_FriendRequest::clear_has_request_origin_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply_FriendRequest::clear_request_origin_user_id() {
  request_origin_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_request_origin_user_id();
}
inline ::google::protobuf::int64 AppReply_FriendRequest::request_origin_user_id() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.FriendRequest.request_origin_user_id)
  return request_origin_user_id_;
}
inline void AppReply_FriendRequest::set_request_origin_user_id(::google::protobuf::int64 value) {
  set_has_request_origin_user_id();
  request_origin_user_id_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.FriendRequest.request_origin_user_id)
}

// required string request_message = 2;
inline bool AppReply_FriendRequest::has_request_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppReply_FriendRequest::set_has_request_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppReply_FriendRequest::clear_has_request_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppReply_FriendRequest::clear_request_message() {
  if (request_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_message_->clear();
  }
  clear_has_request_message();
}
inline const ::std::string& AppReply_FriendRequest::request_message() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.FriendRequest.request_message)
  return *request_message_;
}
inline void AppReply_FriendRequest::set_request_message(const ::std::string& value) {
  set_has_request_message();
  if (request_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_message_ = new ::std::string;
  }
  request_message_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.FriendRequest.request_message)
}
inline void AppReply_FriendRequest::set_request_message(const char* value) {
  set_has_request_message();
  if (request_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_message_ = new ::std::string;
  }
  request_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.FriendRequest.request_message)
}
inline void AppReply_FriendRequest::set_request_message(const char* value, size_t size) {
  set_has_request_message();
  if (request_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_message_ = new ::std::string;
  }
  request_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.FriendRequest.request_message)
}
inline ::std::string* AppReply_FriendRequest::mutable_request_message() {
  set_has_request_message();
  if (request_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    request_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.FriendRequest.request_message)
  return request_message_;
}
inline ::std::string* AppReply_FriendRequest::release_request_message() {
  clear_has_request_message();
  if (request_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = request_message_;
    request_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_FriendRequest::set_allocated_request_message(::std::string* request_message) {
  if (request_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete request_message_;
  }
  if (request_message) {
    set_has_request_message();
    request_message_ = request_message;
  } else {
    clear_has_request_message();
    request_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.FriendRequest.request_message)
}

// -------------------------------------------------------------------

// AppReply_EventInfo

// required string title = 1;
inline bool AppReply_EventInfo::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply_EventInfo::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply_EventInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply_EventInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& AppReply_EventInfo::title() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.title)
  return *title_;
}
inline void AppReply_EventInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.title)
}
inline void AppReply_EventInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.EventInfo.title)
}
inline void AppReply_EventInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.EventInfo.title)
}
inline ::std::string* AppReply_EventInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.EventInfo.title)
  return title_;
}
inline ::std::string* AppReply_EventInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_EventInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.EventInfo.title)
}

// required string location = 2;
inline bool AppReply_EventInfo::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppReply_EventInfo::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppReply_EventInfo::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppReply_EventInfo::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& AppReply_EventInfo::location() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.location)
  return *location_;
}
inline void AppReply_EventInfo::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.location)
}
inline void AppReply_EventInfo::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.EventInfo.location)
}
inline void AppReply_EventInfo::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.EventInfo.location)
}
inline ::std::string* AppReply_EventInfo::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.EventInfo.location)
  return location_;
}
inline ::std::string* AppReply_EventInfo::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_EventInfo::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.EventInfo.location)
}

// required int64 time = 3;
inline bool AppReply_EventInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppReply_EventInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppReply_EventInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppReply_EventInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AppReply_EventInfo::time() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.time)
  return time_;
}
inline void AppReply_EventInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.time)
}

// required bytes event_uuid = 4;
inline bool AppReply_EventInfo::has_event_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppReply_EventInfo::set_has_event_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppReply_EventInfo::clear_has_event_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppReply_EventInfo::clear_event_uuid() {
  if (event_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid_->clear();
  }
  clear_has_event_uuid();
}
inline const ::std::string& AppReply_EventInfo::event_uuid() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.event_uuid)
  return *event_uuid_;
}
inline void AppReply_EventInfo::set_event_uuid(const ::std::string& value) {
  set_has_event_uuid();
  if (event_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid_ = new ::std::string;
  }
  event_uuid_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.event_uuid)
}
inline void AppReply_EventInfo::set_event_uuid(const char* value) {
  set_has_event_uuid();
  if (event_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid_ = new ::std::string;
  }
  event_uuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.EventInfo.event_uuid)
}
inline void AppReply_EventInfo::set_event_uuid(const void* value, size_t size) {
  set_has_event_uuid();
  if (event_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid_ = new ::std::string;
  }
  event_uuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.EventInfo.event_uuid)
}
inline ::std::string* AppReply_EventInfo::mutable_event_uuid() {
  set_has_event_uuid();
  if (event_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_uuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.EventInfo.event_uuid)
  return event_uuid_;
}
inline ::std::string* AppReply_EventInfo::release_event_uuid() {
  clear_has_event_uuid();
  if (event_uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_uuid_;
    event_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_EventInfo::set_allocated_event_uuid(::std::string* event_uuid) {
  if (event_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_uuid_;
  }
  if (event_uuid) {
    set_has_event_uuid();
    event_uuid_ = event_uuid;
  } else {
    clear_has_event_uuid();
    event_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.EventInfo.event_uuid)
}

// required bool is_public = 5;
inline bool AppReply_EventInfo::has_is_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppReply_EventInfo::set_has_is_public() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppReply_EventInfo::clear_has_is_public() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppReply_EventInfo::clear_is_public() {
  is_public_ = false;
  clear_has_is_public();
}
inline bool AppReply_EventInfo::is_public() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.is_public)
  return is_public_;
}
inline void AppReply_EventInfo::set_is_public(bool value) {
  set_has_is_public();
  is_public_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.is_public)
}

// required string description = 6;
inline bool AppReply_EventInfo::has_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppReply_EventInfo::set_has_description() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppReply_EventInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppReply_EventInfo::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AppReply_EventInfo::description() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.description)
  return *description_;
}
inline void AppReply_EventInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.description)
}
inline void AppReply_EventInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:netmsg.AppReply.EventInfo.description)
}
inline void AppReply_EventInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:netmsg.AppReply.EventInfo.description)
}
inline ::std::string* AppReply_EventInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.EventInfo.description)
  return description_;
}
inline ::std::string* AppReply_EventInfo::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppReply_EventInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.EventInfo.description)
}

// repeated int64 accepted_users = 7;
inline int AppReply_EventInfo::accepted_users_size() const {
  return accepted_users_.size();
}
inline void AppReply_EventInfo::clear_accepted_users() {
  accepted_users_.Clear();
}
inline ::google::protobuf::int64 AppReply_EventInfo::accepted_users(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.EventInfo.accepted_users)
  return accepted_users_.Get(index);
}
inline void AppReply_EventInfo::set_accepted_users(int index, ::google::protobuf::int64 value) {
  accepted_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.EventInfo.accepted_users)
}
inline void AppReply_EventInfo::add_accepted_users(::google::protobuf::int64 value) {
  accepted_users_.Add(value);
  // @@protoc_insertion_point(field_add:netmsg.AppReply.EventInfo.accepted_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AppReply_EventInfo::accepted_users() const {
  // @@protoc_insertion_point(field_list:netmsg.AppReply.EventInfo.accepted_users)
  return accepted_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AppReply_EventInfo::mutable_accepted_users() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppReply.EventInfo.accepted_users)
  return &accepted_users_;
}

// -------------------------------------------------------------------

// AppReply

// required .netmsg.AppReply.ResponseType response_type = 1;
inline bool AppReply::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppReply::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppReply::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppReply::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::netmsg::AppReply_ResponseType AppReply::response_type() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.response_type)
  return static_cast< ::netmsg::AppReply_ResponseType >(response_type_);
}
inline void AppReply::set_response_type(::netmsg::AppReply_ResponseType value) {
  assert(::netmsg::AppReply_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
  // @@protoc_insertion_point(field_set:netmsg.AppReply.response_type)
}

// optional .netmsg.AppReply.EventUUID event_uuid = 2;
inline bool AppReply::has_event_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppReply::set_has_event_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppReply::clear_has_event_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppReply::clear_event_uuid() {
  if (event_uuid_ != NULL) event_uuid_->::netmsg::AppReply_EventUUID::Clear();
  clear_has_event_uuid();
}
inline const ::netmsg::AppReply_EventUUID& AppReply::event_uuid() const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.event_uuid)
  return event_uuid_ != NULL ? *event_uuid_ : *default_instance_->event_uuid_;
}
inline ::netmsg::AppReply_EventUUID* AppReply::mutable_event_uuid() {
  set_has_event_uuid();
  if (event_uuid_ == NULL) event_uuid_ = new ::netmsg::AppReply_EventUUID;
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.event_uuid)
  return event_uuid_;
}
inline ::netmsg::AppReply_EventUUID* AppReply::release_event_uuid() {
  clear_has_event_uuid();
  ::netmsg::AppReply_EventUUID* temp = event_uuid_;
  event_uuid_ = NULL;
  return temp;
}
inline void AppReply::set_allocated_event_uuid(::netmsg::AppReply_EventUUID* event_uuid) {
  delete event_uuid_;
  event_uuid_ = event_uuid;
  if (event_uuid) {
    set_has_event_uuid();
  } else {
    clear_has_event_uuid();
  }
  // @@protoc_insertion_point(field_set_allocated:netmsg.AppReply.event_uuid)
}

// repeated .netmsg.AppReply.User users = 3;
inline int AppReply::users_size() const {
  return users_.size();
}
inline void AppReply::clear_users() {
  users_.Clear();
}
inline const ::netmsg::AppReply_User& AppReply::users(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.users)
  return users_.Get(index);
}
inline ::netmsg::AppReply_User* AppReply::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.users)
  return users_.Mutable(index);
}
inline ::netmsg::AppReply_User* AppReply::add_users() {
  // @@protoc_insertion_point(field_add:netmsg.AppReply.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_User >&
AppReply::users() const {
  // @@protoc_insertion_point(field_list:netmsg.AppReply.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_User >*
AppReply::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppReply.users)
  return &users_;
}

// repeated .netmsg.AppReply.FriendRequest friend_requests = 4;
inline int AppReply::friend_requests_size() const {
  return friend_requests_.size();
}
inline void AppReply::clear_friend_requests() {
  friend_requests_.Clear();
}
inline const ::netmsg::AppReply_FriendRequest& AppReply::friend_requests(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.friend_requests)
  return friend_requests_.Get(index);
}
inline ::netmsg::AppReply_FriendRequest* AppReply::mutable_friend_requests(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.friend_requests)
  return friend_requests_.Mutable(index);
}
inline ::netmsg::AppReply_FriendRequest* AppReply::add_friend_requests() {
  // @@protoc_insertion_point(field_add:netmsg.AppReply.friend_requests)
  return friend_requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_FriendRequest >&
AppReply::friend_requests() const {
  // @@protoc_insertion_point(field_list:netmsg.AppReply.friend_requests)
  return friend_requests_;
}
inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_FriendRequest >*
AppReply::mutable_friend_requests() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppReply.friend_requests)
  return &friend_requests_;
}

// repeated .netmsg.AppReply.EventInfo event_info = 5;
inline int AppReply::event_info_size() const {
  return event_info_.size();
}
inline void AppReply::clear_event_info() {
  event_info_.Clear();
}
inline const ::netmsg::AppReply_EventInfo& AppReply::event_info(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.event_info)
  return event_info_.Get(index);
}
inline ::netmsg::AppReply_EventInfo* AppReply::mutable_event_info(int index) {
  // @@protoc_insertion_point(field_mutable:netmsg.AppReply.event_info)
  return event_info_.Mutable(index);
}
inline ::netmsg::AppReply_EventInfo* AppReply::add_event_info() {
  // @@protoc_insertion_point(field_add:netmsg.AppReply.event_info)
  return event_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_EventInfo >&
AppReply::event_info() const {
  // @@protoc_insertion_point(field_list:netmsg.AppReply.event_info)
  return event_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::netmsg::AppReply_EventInfo >*
AppReply::mutable_event_info() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppReply.event_info)
  return &event_info_;
}

// repeated int64 accepted_friends = 6;
inline int AppReply::accepted_friends_size() const {
  return accepted_friends_.size();
}
inline void AppReply::clear_accepted_friends() {
  accepted_friends_.Clear();
}
inline ::google::protobuf::int64 AppReply::accepted_friends(int index) const {
  // @@protoc_insertion_point(field_get:netmsg.AppReply.accepted_friends)
  return accepted_friends_.Get(index);
}
inline void AppReply::set_accepted_friends(int index, ::google::protobuf::int64 value) {
  accepted_friends_.Set(index, value);
  // @@protoc_insertion_point(field_set:netmsg.AppReply.accepted_friends)
}
inline void AppReply::add_accepted_friends(::google::protobuf::int64 value) {
  accepted_friends_.Add(value);
  // @@protoc_insertion_point(field_add:netmsg.AppReply.accepted_friends)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AppReply::accepted_friends() const {
  // @@protoc_insertion_point(field_list:netmsg.AppReply.accepted_friends)
  return accepted_friends_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AppReply::mutable_accepted_friends() {
  // @@protoc_insertion_point(field_mutable_list:netmsg.AppReply.accepted_friends)
  return &accepted_friends_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace netmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::netmsg::AppRequest_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::netmsg::AppRequest_MessageType>() {
  return ::netmsg::AppRequest_MessageType_descriptor();
}
template <> struct is_proto_enum< ::netmsg::AppReply_ResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::netmsg::AppReply_ResponseType>() {
  return ::netmsg::AppReply_ResponseType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_social_2eproto__INCLUDED
