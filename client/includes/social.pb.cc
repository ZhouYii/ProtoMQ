// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace netmsg {

namespace {

const ::google::protobuf::Descriptor* AppRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequest_RegisterMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_RegisterMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequest_LoginMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_LoginMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequest_StatusUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_StatusUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequest_CreateRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_CreateRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequest_RoomPostMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequest_RoomPostMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AppRequest_MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AppRequest_RoomType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AppReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppReply_CreateRoomReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppReply_CreateRoomReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_social_2eproto() {
  protobuf_AddDesc_social_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "social.proto");
  GOOGLE_CHECK(file != NULL);
  AppRequest_descriptor_ = file->message_type(0);
  static const int AppRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, phone_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, reg_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, login_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, status_updates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, create_room_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, room_post_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, logout_request_),
  };
  AppRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_descriptor_,
      AppRequest::default_instance_,
      AppRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest));
  AppRequest_RegisterMessage_descriptor_ = AppRequest_descriptor_->nested_type(0);
  static const int AppRequest_RegisterMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RegisterMessage, secured_password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RegisterMessage, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RegisterMessage, email_),
  };
  AppRequest_RegisterMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_RegisterMessage_descriptor_,
      AppRequest_RegisterMessage::default_instance_,
      AppRequest_RegisterMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RegisterMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RegisterMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest_RegisterMessage));
  AppRequest_LoginMessage_descriptor_ = AppRequest_descriptor_->nested_type(1);
  static const int AppRequest_LoginMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_LoginMessage, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_LoginMessage, secured_password_),
  };
  AppRequest_LoginMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_LoginMessage_descriptor_,
      AppRequest_LoginMessage::default_instance_,
      AppRequest_LoginMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_LoginMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_LoginMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest_LoginMessage));
  AppRequest_StatusUpdate_descriptor_ = AppRequest_descriptor_->nested_type(2);
  static const int AppRequest_StatusUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_StatusUpdate, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_StatusUpdate, photos_),
  };
  AppRequest_StatusUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_StatusUpdate_descriptor_,
      AppRequest_StatusUpdate::default_instance_,
      AppRequest_StatusUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_StatusUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_StatusUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest_StatusUpdate));
  AppRequest_CreateRoom_descriptor_ = AppRequest_descriptor_->nested_type(3);
  static const int AppRequest_CreateRoom_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_CreateRoom, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_CreateRoom, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_CreateRoom, uuid_suggestion_),
  };
  AppRequest_CreateRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_CreateRoom_descriptor_,
      AppRequest_CreateRoom::default_instance_,
      AppRequest_CreateRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_CreateRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_CreateRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest_CreateRoom));
  AppRequest_RoomPostMessage_descriptor_ = AppRequest_descriptor_->nested_type(4);
  static const int AppRequest_RoomPostMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RoomPostMessage, room_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RoomPostMessage, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RoomPostMessage, photos_),
  };
  AppRequest_RoomPostMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequest_RoomPostMessage_descriptor_,
      AppRequest_RoomPostMessage::default_instance_,
      AppRequest_RoomPostMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RoomPostMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequest_RoomPostMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequest_RoomPostMessage));
  AppRequest_MessageType_descriptor_ = AppRequest_descriptor_->enum_type(0);
  AppRequest_RoomType_descriptor_ = AppRequest_descriptor_->enum_type(1);
  AppReply_descriptor_ = file->message_type(1);
  static const int AppReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply, create_reply_),
  };
  AppReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppReply_descriptor_,
      AppReply::default_instance_,
      AppReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppReply));
  AppReply_CreateRoomReply_descriptor_ = AppReply_descriptor_->nested_type(0);
  static const int AppReply_CreateRoomReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply_CreateRoomReply, success_uuid_),
  };
  AppReply_CreateRoomReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppReply_CreateRoomReply_descriptor_,
      AppReply_CreateRoomReply::default_instance_,
      AppReply_CreateRoomReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply_CreateRoomReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppReply_CreateRoomReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppReply_CreateRoomReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_social_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_descriptor_, &AppRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_RegisterMessage_descriptor_, &AppRequest_RegisterMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_LoginMessage_descriptor_, &AppRequest_LoginMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_StatusUpdate_descriptor_, &AppRequest_StatusUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_CreateRoom_descriptor_, &AppRequest_CreateRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequest_RoomPostMessage_descriptor_, &AppRequest_RoomPostMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppReply_descriptor_, &AppReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppReply_CreateRoomReply_descriptor_, &AppReply_CreateRoomReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_social_2eproto() {
  delete AppRequest::default_instance_;
  delete AppRequest_reflection_;
  delete AppRequest_RegisterMessage::default_instance_;
  delete AppRequest_RegisterMessage_reflection_;
  delete AppRequest_LoginMessage::default_instance_;
  delete AppRequest_LoginMessage_reflection_;
  delete AppRequest_StatusUpdate::default_instance_;
  delete AppRequest_StatusUpdate_reflection_;
  delete AppRequest_CreateRoom::default_instance_;
  delete AppRequest_CreateRoom_reflection_;
  delete AppRequest_RoomPostMessage::default_instance_;
  delete AppRequest_RoomPostMessage_reflection_;
  delete AppReply::default_instance_;
  delete AppReply_reflection_;
  delete AppReply_CreateRoomReply::default_instance_;
  delete AppReply_CreateRoomReply_reflection_;
}

void protobuf_AddDesc_social_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014social.proto\022\006netmsg\"\364\006\n\nAppRequest\022\020\n"
    "\010phone_id\030\001 \002(\003\0220\n\010msg_type\030\002 \002(\0162\036.netm"
    "sg.AppRequest.MessageType\0223\n\007reg_msg\030\003 \001"
    "(\0132\".netmsg.AppRequest.RegisterMessage\0222"
    "\n\tlogin_msg\030\004 \001(\0132\037.netmsg.AppRequest.Lo"
    "ginMessage\0227\n\016status_updates\030\005 \001(\0132\037.net"
    "msg.AppRequest.StatusUpdate\0226\n\017create_ro"
    "om_msg\030\r \001(\0132\035.netmsg.AppRequest.CreateR"
    "oom\0229\n\rroom_post_msg\030\016 \001(\0132\".netmsg.AppR"
    "equest.RoomPostMessage\022\026\n\016logout_request"
    "\030\017 \001(\010\032L\n\017RegisterMessage\022\030\n\020secured_pas"
    "sword\030\001 \002(\t\022\020\n\010username\030\002 \002(\t\022\r\n\005email\030\003"
    " \001(\t\0327\n\014LoginMessage\022\r\n\005email\030\001 \001(\t\022\030\n\020s"
    "ecured_password\030\002 \002(\t\032,\n\014StatusUpdate\022\014\n"
    "\004body\030\001 \002(\t\022\016\n\006photos\030\002 \003(\014\032^\n\nCreateRoo"
    "m\022\014\n\004name\030\001 \002(\t\022)\n\004type\030\002 \002(\0162\033.netmsg.A"
    "ppRequest.RoomType\022\027\n\017uuid_suggestion\030\003 "
    "\001(\014\032B\n\017RoomPostMessage\022\021\n\troom_uuid\030\001 \002("
    "\014\022\014\n\004body\030\002 \002(\t\022\016\n\006photos\030\003 \003(\014\"n\n\013Messa"
    "geType\022\021\n\rtStatusUpdate\020\001\022\017\n\013tCreateRoom"
    "\020\002\022\017\n\013tCreatePost\020\003\022\021\n\rtRegistration\020\004\022\n"
    "\n\006tLogin\020\005\022\013\n\007tLogout\020\006\",\n\010RoomType\022\t\n\005E"
    "vent\020\001\022\013\n\007Profile\020\002\022\010\n\004Page\020\003\"|\n\010AppRepl"
    "y\022\017\n\007success\030\001 \002(\010\0226\n\014create_reply\030\002 \001(\013"
    "2 .netmsg.AppReply.CreateRoomReply\032\'\n\017Cr"
    "eateRoomReply\022\024\n\014success_uuid\030\001 \001(\014", 1035);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "social.proto", &protobuf_RegisterTypes);
  AppRequest::default_instance_ = new AppRequest();
  AppRequest_RegisterMessage::default_instance_ = new AppRequest_RegisterMessage();
  AppRequest_LoginMessage::default_instance_ = new AppRequest_LoginMessage();
  AppRequest_StatusUpdate::default_instance_ = new AppRequest_StatusUpdate();
  AppRequest_CreateRoom::default_instance_ = new AppRequest_CreateRoom();
  AppRequest_RoomPostMessage::default_instance_ = new AppRequest_RoomPostMessage();
  AppReply::default_instance_ = new AppReply();
  AppReply_CreateRoomReply::default_instance_ = new AppReply_CreateRoomReply();
  AppRequest::default_instance_->InitAsDefaultInstance();
  AppRequest_RegisterMessage::default_instance_->InitAsDefaultInstance();
  AppRequest_LoginMessage::default_instance_->InitAsDefaultInstance();
  AppRequest_StatusUpdate::default_instance_->InitAsDefaultInstance();
  AppRequest_CreateRoom::default_instance_->InitAsDefaultInstance();
  AppRequest_RoomPostMessage::default_instance_->InitAsDefaultInstance();
  AppReply::default_instance_->InitAsDefaultInstance();
  AppReply_CreateRoomReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_social_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_social_2eproto {
  StaticDescriptorInitializer_social_2eproto() {
    protobuf_AddDesc_social_2eproto();
  }
} static_descriptor_initializer_social_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* AppRequest_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_MessageType_descriptor_;
}
bool AppRequest_MessageType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const AppRequest_MessageType AppRequest::tStatusUpdate;
const AppRequest_MessageType AppRequest::tCreateRoom;
const AppRequest_MessageType AppRequest::tCreatePost;
const AppRequest_MessageType AppRequest::tRegistration;
const AppRequest_MessageType AppRequest::tLogin;
const AppRequest_MessageType AppRequest::tLogout;
const AppRequest_MessageType AppRequest::MessageType_MIN;
const AppRequest_MessageType AppRequest::MessageType_MAX;
const int AppRequest::MessageType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* AppRequest_RoomType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_RoomType_descriptor_;
}
bool AppRequest_RoomType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const AppRequest_RoomType AppRequest::Event;
const AppRequest_RoomType AppRequest::Profile;
const AppRequest_RoomType AppRequest::Page;
const AppRequest_RoomType AppRequest::RoomType_MIN;
const AppRequest_RoomType AppRequest::RoomType_MAX;
const int AppRequest::RoomType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int AppRequest_RegisterMessage::kSecuredPasswordFieldNumber;
const int AppRequest_RegisterMessage::kUsernameFieldNumber;
const int AppRequest_RegisterMessage::kEmailFieldNumber;
#endif  // !_MSC_VER

AppRequest_RegisterMessage::AppRequest_RegisterMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest.RegisterMessage)
}

void AppRequest_RegisterMessage::InitAsDefaultInstance() {
}

AppRequest_RegisterMessage::AppRequest_RegisterMessage(const AppRequest_RegisterMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest.RegisterMessage)
}

void AppRequest_RegisterMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest_RegisterMessage::~AppRequest_RegisterMessage() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest.RegisterMessage)
  SharedDtor();
}

void AppRequest_RegisterMessage::SharedDtor() {
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secured_password_;
  }
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (this != default_instance_) {
  }
}

void AppRequest_RegisterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest_RegisterMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_RegisterMessage_descriptor_;
}

const AppRequest_RegisterMessage& AppRequest_RegisterMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest_RegisterMessage* AppRequest_RegisterMessage::default_instance_ = NULL;

AppRequest_RegisterMessage* AppRequest_RegisterMessage::New() const {
  return new AppRequest_RegisterMessage;
}

void AppRequest_RegisterMessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_secured_password()) {
      if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        secured_password_->clear();
      }
    }
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest_RegisterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest.RegisterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string secured_password = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secured_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secured_password().data(), this->secured_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secured_password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // required string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // optional string email = 3;
      case 3: {
        if (tag == 26) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest.RegisterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest.RegisterMessage)
  return false;
#undef DO_
}

void AppRequest_RegisterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest.RegisterMessage)
  // required string secured_password = 1;
  if (has_secured_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secured_password().data(), this->secured_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secured_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->secured_password(), output);
  }

  // required string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest.RegisterMessage)
}

::google::protobuf::uint8* AppRequest_RegisterMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest.RegisterMessage)
  // required string secured_password = 1;
  if (has_secured_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secured_password().data(), this->secured_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secured_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secured_password(), target);
  }

  // required string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest.RegisterMessage)
  return target;
}

int AppRequest_RegisterMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string secured_password = 1;
    if (has_secured_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secured_password());
    }

    // required string username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest_RegisterMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest_RegisterMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest_RegisterMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest_RegisterMessage::MergeFrom(const AppRequest_RegisterMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_secured_password()) {
      set_secured_password(from.secured_password());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest_RegisterMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest_RegisterMessage::CopyFrom(const AppRequest_RegisterMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest_RegisterMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AppRequest_RegisterMessage::Swap(AppRequest_RegisterMessage* other) {
  if (other != this) {
    std::swap(secured_password_, other->secured_password_);
    std::swap(username_, other->username_);
    std::swap(email_, other->email_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest_RegisterMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_RegisterMessage_descriptor_;
  metadata.reflection = AppRequest_RegisterMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequest_LoginMessage::kEmailFieldNumber;
const int AppRequest_LoginMessage::kSecuredPasswordFieldNumber;
#endif  // !_MSC_VER

AppRequest_LoginMessage::AppRequest_LoginMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest.LoginMessage)
}

void AppRequest_LoginMessage::InitAsDefaultInstance() {
}

AppRequest_LoginMessage::AppRequest_LoginMessage(const AppRequest_LoginMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest.LoginMessage)
}

void AppRequest_LoginMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secured_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest_LoginMessage::~AppRequest_LoginMessage() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest.LoginMessage)
  SharedDtor();
}

void AppRequest_LoginMessage::SharedDtor() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secured_password_;
  }
  if (this != default_instance_) {
  }
}

void AppRequest_LoginMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest_LoginMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_LoginMessage_descriptor_;
}

const AppRequest_LoginMessage& AppRequest_LoginMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest_LoginMessage* AppRequest_LoginMessage::default_instance_ = NULL;

AppRequest_LoginMessage* AppRequest_LoginMessage::New() const {
  return new AppRequest_LoginMessage;
}

void AppRequest_LoginMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
    if (has_secured_password()) {
      if (secured_password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        secured_password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest_LoginMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest.LoginMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_secured_password;
        break;
      }

      // required string secured_password = 2;
      case 2: {
        if (tag == 18) {
         parse_secured_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secured_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secured_password().data(), this->secured_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secured_password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest.LoginMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest.LoginMessage)
  return false;
#undef DO_
}

void AppRequest_LoginMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest.LoginMessage)
  // optional string email = 1;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // required string secured_password = 2;
  if (has_secured_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secured_password().data(), this->secured_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secured_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secured_password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest.LoginMessage)
}

::google::protobuf::uint8* AppRequest_LoginMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest.LoginMessage)
  // optional string email = 1;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // required string secured_password = 2;
  if (has_secured_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secured_password().data(), this->secured_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secured_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secured_password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest.LoginMessage)
  return target;
}

int AppRequest_LoginMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string email = 1;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // required string secured_password = 2;
    if (has_secured_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secured_password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest_LoginMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest_LoginMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest_LoginMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest_LoginMessage::MergeFrom(const AppRequest_LoginMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_secured_password()) {
      set_secured_password(from.secured_password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest_LoginMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest_LoginMessage::CopyFrom(const AppRequest_LoginMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest_LoginMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void AppRequest_LoginMessage::Swap(AppRequest_LoginMessage* other) {
  if (other != this) {
    std::swap(email_, other->email_);
    std::swap(secured_password_, other->secured_password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest_LoginMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_LoginMessage_descriptor_;
  metadata.reflection = AppRequest_LoginMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequest_StatusUpdate::kBodyFieldNumber;
const int AppRequest_StatusUpdate::kPhotosFieldNumber;
#endif  // !_MSC_VER

AppRequest_StatusUpdate::AppRequest_StatusUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest.StatusUpdate)
}

void AppRequest_StatusUpdate::InitAsDefaultInstance() {
}

AppRequest_StatusUpdate::AppRequest_StatusUpdate(const AppRequest_StatusUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest.StatusUpdate)
}

void AppRequest_StatusUpdate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest_StatusUpdate::~AppRequest_StatusUpdate() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest.StatusUpdate)
  SharedDtor();
}

void AppRequest_StatusUpdate::SharedDtor() {
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete body_;
  }
  if (this != default_instance_) {
  }
}

void AppRequest_StatusUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest_StatusUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_StatusUpdate_descriptor_;
}

const AppRequest_StatusUpdate& AppRequest_StatusUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest_StatusUpdate* AppRequest_StatusUpdate::default_instance_ = NULL;

AppRequest_StatusUpdate* AppRequest_StatusUpdate::New() const {
  return new AppRequest_StatusUpdate;
}

void AppRequest_StatusUpdate::Clear() {
  if (has_body()) {
    if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      body_->clear();
    }
  }
  photos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest_StatusUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest.StatusUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string body = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_photos;
        break;
      }

      // repeated bytes photos = 2;
      case 2: {
        if (tag == 18) {
         parse_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_photos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest.StatusUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest.StatusUpdate)
  return false;
#undef DO_
}

void AppRequest_StatusUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest.StatusUpdate)
  // required string body = 1;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->body(), output);
  }

  // repeated bytes photos = 2;
  for (int i = 0; i < this->photos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->photos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest.StatusUpdate)
}

::google::protobuf::uint8* AppRequest_StatusUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest.StatusUpdate)
  // required string body = 1;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->body(), target);
  }

  // repeated bytes photos = 2;
  for (int i = 0; i < this->photos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->photos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest.StatusUpdate)
  return target;
}

int AppRequest_StatusUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string body = 1;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body());
    }

  }
  // repeated bytes photos = 2;
  total_size += 1 * this->photos_size();
  for (int i = 0; i < this->photos_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->photos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest_StatusUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest_StatusUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest_StatusUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest_StatusUpdate::MergeFrom(const AppRequest_StatusUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  photos_.MergeFrom(from.photos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest_StatusUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest_StatusUpdate::CopyFrom(const AppRequest_StatusUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest_StatusUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AppRequest_StatusUpdate::Swap(AppRequest_StatusUpdate* other) {
  if (other != this) {
    std::swap(body_, other->body_);
    photos_.Swap(&other->photos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest_StatusUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_StatusUpdate_descriptor_;
  metadata.reflection = AppRequest_StatusUpdate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequest_CreateRoom::kNameFieldNumber;
const int AppRequest_CreateRoom::kTypeFieldNumber;
const int AppRequest_CreateRoom::kUuidSuggestionFieldNumber;
#endif  // !_MSC_VER

AppRequest_CreateRoom::AppRequest_CreateRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest.CreateRoom)
}

void AppRequest_CreateRoom::InitAsDefaultInstance() {
}

AppRequest_CreateRoom::AppRequest_CreateRoom(const AppRequest_CreateRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest.CreateRoom)
}

void AppRequest_CreateRoom::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  uuid_suggestion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest_CreateRoom::~AppRequest_CreateRoom() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest.CreateRoom)
  SharedDtor();
}

void AppRequest_CreateRoom::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (uuid_suggestion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uuid_suggestion_;
  }
  if (this != default_instance_) {
  }
}

void AppRequest_CreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest_CreateRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_CreateRoom_descriptor_;
}

const AppRequest_CreateRoom& AppRequest_CreateRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest_CreateRoom* AppRequest_CreateRoom::default_instance_ = NULL;

AppRequest_CreateRoom* AppRequest_CreateRoom::New() const {
  return new AppRequest_CreateRoom;
}

void AppRequest_CreateRoom::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    type_ = 1;
    if (has_uuid_suggestion()) {
      if (uuid_suggestion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uuid_suggestion_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest_CreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest.CreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .netmsg.AppRequest.RoomType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::netmsg::AppRequest_RoomType_IsValid(value)) {
            set_type(static_cast< ::netmsg::AppRequest_RoomType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuid_suggestion;
        break;
      }

      // optional bytes uuid_suggestion = 3;
      case 3: {
        if (tag == 26) {
         parse_uuid_suggestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid_suggestion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest.CreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest.CreateRoom)
  return false;
#undef DO_
}

void AppRequest_CreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest.CreateRoom)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .netmsg.AppRequest.RoomType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional bytes uuid_suggestion = 3;
  if (has_uuid_suggestion()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->uuid_suggestion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest.CreateRoom)
}

::google::protobuf::uint8* AppRequest_CreateRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest.CreateRoom)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .netmsg.AppRequest.RoomType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional bytes uuid_suggestion = 3;
  if (has_uuid_suggestion()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->uuid_suggestion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest.CreateRoom)
  return target;
}

int AppRequest_CreateRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .netmsg.AppRequest.RoomType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bytes uuid_suggestion = 3;
    if (has_uuid_suggestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uuid_suggestion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest_CreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest_CreateRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest_CreateRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest_CreateRoom::MergeFrom(const AppRequest_CreateRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_uuid_suggestion()) {
      set_uuid_suggestion(from.uuid_suggestion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest_CreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest_CreateRoom::CopyFrom(const AppRequest_CreateRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest_CreateRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AppRequest_CreateRoom::Swap(AppRequest_CreateRoom* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(uuid_suggestion_, other->uuid_suggestion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest_CreateRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_CreateRoom_descriptor_;
  metadata.reflection = AppRequest_CreateRoom_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequest_RoomPostMessage::kRoomUuidFieldNumber;
const int AppRequest_RoomPostMessage::kBodyFieldNumber;
const int AppRequest_RoomPostMessage::kPhotosFieldNumber;
#endif  // !_MSC_VER

AppRequest_RoomPostMessage::AppRequest_RoomPostMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest.RoomPostMessage)
}

void AppRequest_RoomPostMessage::InitAsDefaultInstance() {
}

AppRequest_RoomPostMessage::AppRequest_RoomPostMessage(const AppRequest_RoomPostMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest.RoomPostMessage)
}

void AppRequest_RoomPostMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  room_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest_RoomPostMessage::~AppRequest_RoomPostMessage() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest.RoomPostMessage)
  SharedDtor();
}

void AppRequest_RoomPostMessage::SharedDtor() {
  if (room_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_uuid_;
  }
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete body_;
  }
  if (this != default_instance_) {
  }
}

void AppRequest_RoomPostMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest_RoomPostMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_RoomPostMessage_descriptor_;
}

const AppRequest_RoomPostMessage& AppRequest_RoomPostMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest_RoomPostMessage* AppRequest_RoomPostMessage::default_instance_ = NULL;

AppRequest_RoomPostMessage* AppRequest_RoomPostMessage::New() const {
  return new AppRequest_RoomPostMessage;
}

void AppRequest_RoomPostMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_room_uuid()) {
      if (room_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        room_uuid_->clear();
      }
    }
    if (has_body()) {
      if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        body_->clear();
      }
    }
  }
  photos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest_RoomPostMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest.RoomPostMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes room_uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_room_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_body;
        break;
      }

      // required string body = 2;
      case 2: {
        if (tag == 18) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_photos;
        break;
      }

      // repeated bytes photos = 3;
      case 3: {
        if (tag == 26) {
         parse_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_photos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest.RoomPostMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest.RoomPostMessage)
  return false;
#undef DO_
}

void AppRequest_RoomPostMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest.RoomPostMessage)
  // required bytes room_uuid = 1;
  if (has_room_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->room_uuid(), output);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  // repeated bytes photos = 3;
  for (int i = 0; i < this->photos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->photos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest.RoomPostMessage)
}

::google::protobuf::uint8* AppRequest_RoomPostMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest.RoomPostMessage)
  // required bytes room_uuid = 1;
  if (has_room_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->room_uuid(), target);
  }

  // required string body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  // repeated bytes photos = 3;
  for (int i = 0; i < this->photos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->photos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest.RoomPostMessage)
  return target;
}

int AppRequest_RoomPostMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes room_uuid = 1;
    if (has_room_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->room_uuid());
    }

    // required string body = 2;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body());
    }

  }
  // repeated bytes photos = 3;
  total_size += 1 * this->photos_size();
  for (int i = 0; i < this->photos_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->photos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest_RoomPostMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest_RoomPostMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest_RoomPostMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest_RoomPostMessage::MergeFrom(const AppRequest_RoomPostMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  photos_.MergeFrom(from.photos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_uuid()) {
      set_room_uuid(from.room_uuid());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest_RoomPostMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest_RoomPostMessage::CopyFrom(const AppRequest_RoomPostMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest_RoomPostMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AppRequest_RoomPostMessage::Swap(AppRequest_RoomPostMessage* other) {
  if (other != this) {
    std::swap(room_uuid_, other->room_uuid_);
    std::swap(body_, other->body_);
    photos_.Swap(&other->photos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest_RoomPostMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_RoomPostMessage_descriptor_;
  metadata.reflection = AppRequest_RoomPostMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequest::kPhoneIdFieldNumber;
const int AppRequest::kMsgTypeFieldNumber;
const int AppRequest::kRegMsgFieldNumber;
const int AppRequest::kLoginMsgFieldNumber;
const int AppRequest::kStatusUpdatesFieldNumber;
const int AppRequest::kCreateRoomMsgFieldNumber;
const int AppRequest::kRoomPostMsgFieldNumber;
const int AppRequest::kLogoutRequestFieldNumber;
#endif  // !_MSC_VER

AppRequest::AppRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppRequest)
}

void AppRequest::InitAsDefaultInstance() {
  reg_msg_ = const_cast< ::netmsg::AppRequest_RegisterMessage*>(&::netmsg::AppRequest_RegisterMessage::default_instance());
  login_msg_ = const_cast< ::netmsg::AppRequest_LoginMessage*>(&::netmsg::AppRequest_LoginMessage::default_instance());
  status_updates_ = const_cast< ::netmsg::AppRequest_StatusUpdate*>(&::netmsg::AppRequest_StatusUpdate::default_instance());
  create_room_msg_ = const_cast< ::netmsg::AppRequest_CreateRoom*>(&::netmsg::AppRequest_CreateRoom::default_instance());
  room_post_msg_ = const_cast< ::netmsg::AppRequest_RoomPostMessage*>(&::netmsg::AppRequest_RoomPostMessage::default_instance());
}

AppRequest::AppRequest(const AppRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppRequest)
}

void AppRequest::SharedCtor() {
  _cached_size_ = 0;
  phone_id_ = GOOGLE_LONGLONG(0);
  msg_type_ = 1;
  reg_msg_ = NULL;
  login_msg_ = NULL;
  status_updates_ = NULL;
  create_room_msg_ = NULL;
  room_post_msg_ = NULL;
  logout_request_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequest::~AppRequest() {
  // @@protoc_insertion_point(destructor:netmsg.AppRequest)
  SharedDtor();
}

void AppRequest::SharedDtor() {
  if (this != default_instance_) {
    delete reg_msg_;
    delete login_msg_;
    delete status_updates_;
    delete create_room_msg_;
    delete room_post_msg_;
  }
}

void AppRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequest_descriptor_;
}

const AppRequest& AppRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppRequest* AppRequest::default_instance_ = NULL;

AppRequest* AppRequest::New() const {
  return new AppRequest;
}

void AppRequest::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    phone_id_ = GOOGLE_LONGLONG(0);
    msg_type_ = 1;
    if (has_reg_msg()) {
      if (reg_msg_ != NULL) reg_msg_->::netmsg::AppRequest_RegisterMessage::Clear();
    }
    if (has_login_msg()) {
      if (login_msg_ != NULL) login_msg_->::netmsg::AppRequest_LoginMessage::Clear();
    }
    if (has_status_updates()) {
      if (status_updates_ != NULL) status_updates_->::netmsg::AppRequest_StatusUpdate::Clear();
    }
    if (has_create_room_msg()) {
      if (create_room_msg_ != NULL) create_room_msg_->::netmsg::AppRequest_CreateRoom::Clear();
    }
    if (has_room_post_msg()) {
      if (room_post_msg_ != NULL) room_post_msg_->::netmsg::AppRequest_RoomPostMessage::Clear();
    }
    logout_request_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 phone_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &phone_id_)));
          set_has_phone_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_type;
        break;
      }

      // required .netmsg.AppRequest.MessageType msg_type = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::netmsg::AppRequest_MessageType_IsValid(value)) {
            set_msg_type(static_cast< ::netmsg::AppRequest_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reg_msg;
        break;
      }

      // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
      case 3: {
        if (tag == 26) {
         parse_reg_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reg_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_login_msg;
        break;
      }

      // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
      case 4: {
        if (tag == 34) {
         parse_login_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_status_updates;
        break;
      }

      // optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
      case 5: {
        if (tag == 42) {
         parse_status_updates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status_updates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_create_room_msg;
        break;
      }

      // optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
      case 13: {
        if (tag == 106) {
         parse_create_room_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_room_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_room_post_msg;
        break;
      }

      // optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
      case 14: {
        if (tag == 114) {
         parse_room_post_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room_post_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_logout_request;
        break;
      }

      // optional bool logout_request = 15;
      case 15: {
        if (tag == 120) {
         parse_logout_request:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &logout_request_)));
          set_has_logout_request();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppRequest)
  return false;
#undef DO_
}

void AppRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppRequest)
  // required int64 phone_id = 1;
  if (has_phone_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->phone_id(), output);
  }

  // required .netmsg.AppRequest.MessageType msg_type = 2;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_type(), output);
  }

  // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
  if (has_reg_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reg_msg(), output);
  }

  // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
  if (has_login_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->login_msg(), output);
  }

  // optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
  if (has_status_updates()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->status_updates(), output);
  }

  // optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
  if (has_create_room_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->create_room_msg(), output);
  }

  // optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
  if (has_room_post_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->room_post_msg(), output);
  }

  // optional bool logout_request = 15;
  if (has_logout_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->logout_request(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppRequest)
}

::google::protobuf::uint8* AppRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppRequest)
  // required int64 phone_id = 1;
  if (has_phone_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->phone_id(), target);
  }

  // required .netmsg.AppRequest.MessageType msg_type = 2;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msg_type(), target);
  }

  // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
  if (has_reg_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reg_msg(), target);
  }

  // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
  if (has_login_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->login_msg(), target);
  }

  // optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
  if (has_status_updates()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->status_updates(), target);
  }

  // optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
  if (has_create_room_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->create_room_msg(), target);
  }

  // optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
  if (has_room_post_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->room_post_msg(), target);
  }

  // optional bool logout_request = 15;
  if (has_logout_request()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->logout_request(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppRequest)
  return target;
}

int AppRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 phone_id = 1;
    if (has_phone_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->phone_id());
    }

    // required .netmsg.AppRequest.MessageType msg_type = 2;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
    }

    // optional .netmsg.AppRequest.RegisterMessage reg_msg = 3;
    if (has_reg_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reg_msg());
    }

    // optional .netmsg.AppRequest.LoginMessage login_msg = 4;
    if (has_login_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login_msg());
    }

    // optional .netmsg.AppRequest.StatusUpdate status_updates = 5;
    if (has_status_updates()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status_updates());
    }

    // optional .netmsg.AppRequest.CreateRoom create_room_msg = 13;
    if (has_create_room_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_room_msg());
    }

    // optional .netmsg.AppRequest.RoomPostMessage room_post_msg = 14;
    if (has_room_post_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->room_post_msg());
    }

    // optional bool logout_request = 15;
    if (has_logout_request()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequest::MergeFrom(const AppRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_phone_id()) {
      set_phone_id(from.phone_id());
    }
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_reg_msg()) {
      mutable_reg_msg()->::netmsg::AppRequest_RegisterMessage::MergeFrom(from.reg_msg());
    }
    if (from.has_login_msg()) {
      mutable_login_msg()->::netmsg::AppRequest_LoginMessage::MergeFrom(from.login_msg());
    }
    if (from.has_status_updates()) {
      mutable_status_updates()->::netmsg::AppRequest_StatusUpdate::MergeFrom(from.status_updates());
    }
    if (from.has_create_room_msg()) {
      mutable_create_room_msg()->::netmsg::AppRequest_CreateRoom::MergeFrom(from.create_room_msg());
    }
    if (from.has_room_post_msg()) {
      mutable_room_post_msg()->::netmsg::AppRequest_RoomPostMessage::MergeFrom(from.room_post_msg());
    }
    if (from.has_logout_request()) {
      set_logout_request(from.logout_request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequest::CopyFrom(const AppRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_reg_msg()) {
    if (!this->reg_msg().IsInitialized()) return false;
  }
  if (has_login_msg()) {
    if (!this->login_msg().IsInitialized()) return false;
  }
  if (has_status_updates()) {
    if (!this->status_updates().IsInitialized()) return false;
  }
  if (has_create_room_msg()) {
    if (!this->create_room_msg().IsInitialized()) return false;
  }
  if (has_room_post_msg()) {
    if (!this->room_post_msg().IsInitialized()) return false;
  }
  return true;
}

void AppRequest::Swap(AppRequest* other) {
  if (other != this) {
    std::swap(phone_id_, other->phone_id_);
    std::swap(msg_type_, other->msg_type_);
    std::swap(reg_msg_, other->reg_msg_);
    std::swap(login_msg_, other->login_msg_);
    std::swap(status_updates_, other->status_updates_);
    std::swap(create_room_msg_, other->create_room_msg_);
    std::swap(room_post_msg_, other->room_post_msg_);
    std::swap(logout_request_, other->logout_request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequest_descriptor_;
  metadata.reflection = AppRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AppReply_CreateRoomReply::kSuccessUuidFieldNumber;
#endif  // !_MSC_VER

AppReply_CreateRoomReply::AppReply_CreateRoomReply()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppReply.CreateRoomReply)
}

void AppReply_CreateRoomReply::InitAsDefaultInstance() {
}

AppReply_CreateRoomReply::AppReply_CreateRoomReply(const AppReply_CreateRoomReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppReply.CreateRoomReply)
}

void AppReply_CreateRoomReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  success_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppReply_CreateRoomReply::~AppReply_CreateRoomReply() {
  // @@protoc_insertion_point(destructor:netmsg.AppReply.CreateRoomReply)
  SharedDtor();
}

void AppReply_CreateRoomReply::SharedDtor() {
  if (success_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete success_uuid_;
  }
  if (this != default_instance_) {
  }
}

void AppReply_CreateRoomReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppReply_CreateRoomReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppReply_CreateRoomReply_descriptor_;
}

const AppReply_CreateRoomReply& AppReply_CreateRoomReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppReply_CreateRoomReply* AppReply_CreateRoomReply::default_instance_ = NULL;

AppReply_CreateRoomReply* AppReply_CreateRoomReply::New() const {
  return new AppReply_CreateRoomReply;
}

void AppReply_CreateRoomReply::Clear() {
  if (has_success_uuid()) {
    if (success_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      success_uuid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppReply_CreateRoomReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppReply.CreateRoomReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes success_uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_success_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppReply.CreateRoomReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppReply.CreateRoomReply)
  return false;
#undef DO_
}

void AppReply_CreateRoomReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppReply.CreateRoomReply)
  // optional bytes success_uuid = 1;
  if (has_success_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->success_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppReply.CreateRoomReply)
}

::google::protobuf::uint8* AppReply_CreateRoomReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppReply.CreateRoomReply)
  // optional bytes success_uuid = 1;
  if (has_success_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->success_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppReply.CreateRoomReply)
  return target;
}

int AppReply_CreateRoomReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes success_uuid = 1;
    if (has_success_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->success_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppReply_CreateRoomReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppReply_CreateRoomReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppReply_CreateRoomReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppReply_CreateRoomReply::MergeFrom(const AppReply_CreateRoomReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success_uuid()) {
      set_success_uuid(from.success_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppReply_CreateRoomReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppReply_CreateRoomReply::CopyFrom(const AppReply_CreateRoomReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppReply_CreateRoomReply::IsInitialized() const {

  return true;
}

void AppReply_CreateRoomReply::Swap(AppReply_CreateRoomReply* other) {
  if (other != this) {
    std::swap(success_uuid_, other->success_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppReply_CreateRoomReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppReply_CreateRoomReply_descriptor_;
  metadata.reflection = AppReply_CreateRoomReply_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppReply::kSuccessFieldNumber;
const int AppReply::kCreateReplyFieldNumber;
#endif  // !_MSC_VER

AppReply::AppReply()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AppReply)
}

void AppReply::InitAsDefaultInstance() {
  create_reply_ = const_cast< ::netmsg::AppReply_CreateRoomReply*>(&::netmsg::AppReply_CreateRoomReply::default_instance());
}

AppReply::AppReply(const AppReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AppReply)
}

void AppReply::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  create_reply_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppReply::~AppReply() {
  // @@protoc_insertion_point(destructor:netmsg.AppReply)
  SharedDtor();
}

void AppReply::SharedDtor() {
  if (this != default_instance_) {
    delete create_reply_;
  }
}

void AppReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppReply_descriptor_;
}

const AppReply& AppReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_social_2eproto();
  return *default_instance_;
}

AppReply* AppReply::default_instance_ = NULL;

AppReply* AppReply::New() const {
  return new AppReply;
}

void AppReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    success_ = false;
    if (has_create_reply()) {
      if (create_reply_ != NULL) create_reply_->::netmsg::AppReply_CreateRoomReply::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AppReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_create_reply;
        break;
      }

      // optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
      case 2: {
        if (tag == 18) {
         parse_create_reply:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_reply()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AppReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AppReply)
  return false;
#undef DO_
}

void AppReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AppReply)
  // required bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
  if (has_create_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->create_reply(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AppReply)
}

::google::protobuf::uint8* AppReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AppReply)
  // required bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
  if (has_create_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->create_reply(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AppReply)
  return target;
}

int AppReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional .netmsg.AppReply.CreateRoomReply create_reply = 2;
    if (has_create_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_reply());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppReply::MergeFrom(const AppReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_create_reply()) {
      mutable_create_reply()->::netmsg::AppReply_CreateRoomReply::MergeFrom(from.create_reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppReply::CopyFrom(const AppReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AppReply::Swap(AppReply* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(create_reply_, other->create_reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppReply_descriptor_;
  metadata.reflection = AppReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace netmsg

// @@protoc_insertion_point(global_scope)
